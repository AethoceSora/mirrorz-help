(()=>{"use strict";var e={};(()=>{e.d=(t,n)=>{for(var r in n){if(e.o(n,r)&&!e.o(t,r)){Object.defineProperty(t,r,{enumerable:true,get:n[r]})}}}})();(()=>{e.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)})();(()=>{e.r=e=>{if(typeof Symbol!=="undefined"&&Symbol.toStringTag){Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}Object.defineProperty(e,"__esModule",{value:true})}})();if(typeof e!=="undefined")e.ab=__dirname+"/";var t={};e.r(t);e.d(t,{default:()=>remarkGfm});function splice(e,t,n,r){const i=e.length;let o=0;let a;if(t<0){t=-t>i?0:i+t}else{t=t>i?i:t}n=n>0?n:0;if(r.length<1e4){a=Array.from(r);a.unshift(t,n);[].splice.apply(e,a)}else{if(n)[].splice.apply(e,[t,n]);while(o<r.length){a=r.slice(o,o+1e4);a.unshift(t,0);[].splice.apply(e,a);o+=1e4;t+=1e4}}}function push(e,t){if(e.length>0){splice(e,e.length,0,t);return e}return t}const n={}.hasOwnProperty;function combineExtensions(e){const t={};let n=-1;while(++n<e.length){syntaxExtension(t,e[n])}return t}function syntaxExtension(e,t){let r;for(r in t){const i=n.call(e,r)?e[r]:undefined;const o=i||(e[r]={});const a=t[r];let l;for(l in a){if(!n.call(o,l))o[l]=[];const e=a[l];constructs(o[l],Array.isArray(e)?e:e?[e]:[])}}}function constructs(e,t){let n=-1;const r=[];while(++n<t.length){(t[n].add==="after"?e:r).push(t[n])}splice(e,0,0,r)}function micromark_util_combine_extensions_combineHtmlExtensions(e){const t={};let n=-1;while(++n<e.length){htmlExtension(t,e[n])}return t}function htmlExtension(e,t){let r;for(r in t){const i=n.call(e,r)?e[r]:undefined;const o=i||(e[r]={});const a=t[r];let l;if(a){for(l in a){o[l]=a[l]}}}}const r=/[!-/:-@[-`{-~\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2010-\u2027\u2030-\u2043\u2045-\u2051\u2053-\u205E\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u2E52\u3001-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]/;const i=regexCheck(/[A-Za-z]/);const o=regexCheck(/\d/);const a=regexCheck(/[\dA-Fa-f]/);const l=regexCheck(/[\dA-Za-z]/);const c=regexCheck(/[!-/:-@[-`{-~]/);const u=regexCheck(/[#-'*+\--9=?A-Z^-~]/);function asciiControl(e){return e!==null&&(e<32||e===127)}function markdownLineEndingOrSpace(e){return e!==null&&(e<0||e===32)}function markdownLineEnding(e){return e!==null&&e<-2}function markdownSpace(e){return e===-2||e===-1||e===32}const f=regexCheck(/\s/);const d=regexCheck(r);function regexCheck(e){return check;function check(t){return t!==null&&e.test(String.fromCharCode(t))}}const h={tokenize:tokenizeWww,partial:true};const g={tokenize:tokenizeDomain,partial:true};const m={tokenize:tokenizePath,partial:true};const b={tokenize:tokenizePunctuation,partial:true};const k={tokenize:tokenizeNamedCharacterReference,partial:true};const w={tokenize:tokenizeWwwAutolink,previous:previousWww};const y={tokenize:tokenizeHttpAutolink,previous:previousHttp};const x={tokenize:tokenizeEmailAutolink,previous:previousEmail};const C={};const v={text:C};let D=48;while(D<123){C[D]=x;D++;if(D===58)D=65;else if(D===91)D=97}C[43]=x;C[45]=x;C[46]=x;C[95]=x;C[72]=[x,y];C[104]=[x,y];C[87]=[x,w];C[119]=[x,w];function tokenizeEmailAutolink(e,t,n){const r=this;let i;let a;return start;function start(t){if(!gfmAtext(t)||!previousEmail(r.previous)||previousUnbalanced(r.events)){return n(t)}e.enter("literalAutolink");e.enter("literalAutolinkEmail");return atext(t)}function atext(t){if(gfmAtext(t)){e.consume(t);return atext}if(t===64){e.consume(t);return label}return n(t)}function label(t){if(t===46){return e.check(b,done,dotContinuation)(t)}if(t===45||t===95){return e.check(b,n,dashOrUnderscoreContinuation)(t)}if(l(t)){if(!a&&o(t)){a=true}e.consume(t);return label}return done(t)}function dotContinuation(t){e.consume(t);i=true;a=undefined;return label}function dashOrUnderscoreContinuation(t){e.consume(t);return afterDashOrUnderscore}function afterDashOrUnderscore(t){if(t===46){return e.check(b,n,dotContinuation)(t)}return label(t)}function done(r){if(i&&!a){e.exit("literalAutolinkEmail");e.exit("literalAutolink");return t(r)}return n(r)}}function tokenizeWwwAutolink(e,t,n){const r=this;return start;function start(t){if(t!==87&&t!==119||!previousWww(r.previous)||previousUnbalanced(r.events)){return n(t)}e.enter("literalAutolink");e.enter("literalAutolinkWww");return e.check(h,e.attempt(g,e.attempt(m,done),n),n)(t)}function done(n){e.exit("literalAutolinkWww");e.exit("literalAutolink");return t(n)}}function tokenizeHttpAutolink(e,t,n){const r=this;return start;function start(t){if(t!==72&&t!==104||!previousHttp(r.previous)||previousUnbalanced(r.events)){return n(t)}e.enter("literalAutolink");e.enter("literalAutolinkHttp");e.consume(t);return t1}function t1(t){if(t===84||t===116){e.consume(t);return t2}return n(t)}function t2(t){if(t===84||t===116){e.consume(t);return p}return n(t)}function p(t){if(t===80||t===112){e.consume(t);return s}return n(t)}function s(t){if(t===83||t===115){e.consume(t);return colon}return colon(t)}function colon(t){if(t===58){e.consume(t);return slash1}return n(t)}function slash1(t){if(t===47){e.consume(t);return slash2}return n(t)}function slash2(t){if(t===47){e.consume(t);return after}return n(t)}function after(t){return t===null||asciiControl(t)||f(t)||d(t)?n(t):e.attempt(g,e.attempt(m,done),n)(t)}function done(n){e.exit("literalAutolinkHttp");e.exit("literalAutolink");return t(n)}}function tokenizeWww(e,t,n){return start;function start(t){e.consume(t);return w2}function w2(t){if(t===87||t===119){e.consume(t);return w3}return n(t)}function w3(t){if(t===87||t===119){e.consume(t);return dot}return n(t)}function dot(t){if(t===46){e.consume(t);return after}return n(t)}function after(e){return e===null||markdownLineEnding(e)?n(e):t(e)}}function tokenizeDomain(e,t,n){let r;let i;return domain;function domain(t){if(t===38){return e.check(k,done,punctuationContinuation)(t)}if(t===46||t===95){return e.check(b,done,punctuationContinuation)(t)}if(t===null||asciiControl(t)||f(t)||t!==45&&d(t)){return done(t)}e.consume(t);return domain}function punctuationContinuation(t){if(t===46){i=r;r=undefined;e.consume(t);return domain}if(t===95)r=true;e.consume(t);return domain}function done(e){if(!i&&!r){return t(e)}return n(e)}}function tokenizePath(e,t){let n=0;return inPath;function inPath(r){if(r===38){return e.check(k,t,continuedPunctuation)(r)}if(r===40){n++}if(r===41){return e.check(b,parenAtPathEnd,continuedPunctuation)(r)}if(pathEnd(r)){return t(r)}if(trailingPunctuation(r)){return e.check(b,t,continuedPunctuation)(r)}e.consume(r);return inPath}function continuedPunctuation(t){e.consume(t);return inPath}function parenAtPathEnd(e){n--;return n<0?t(e):continuedPunctuation(e)}}function tokenizeNamedCharacterReference(e,t,n){return start;function start(t){e.consume(t);return inside}function inside(t){if(i(t)){e.consume(t);return inside}if(t===59){e.consume(t);return after}return n(t)}function after(e){return pathEnd(e)?t(e):n(e)}}function tokenizePunctuation(e,t,n){return start;function start(t){e.consume(t);return after}function after(r){if(trailingPunctuation(r)){e.consume(r);return after}return pathEnd(r)?t(r):n(r)}}function trailingPunctuation(e){return e===33||e===34||e===39||e===41||e===42||e===44||e===46||e===58||e===59||e===60||e===63||e===95||e===126}function pathEnd(e){return e===null||e===60||markdownLineEndingOrSpace(e)}function gfmAtext(e){return e===43||e===45||e===46||e===95||l(e)}function previousWww(e){return e===null||e===40||e===42||e===95||e===126||markdownLineEndingOrSpace(e)}function previousHttp(e){return e===null||!i(e)}function previousEmail(e){return e!==47&&previousHttp(e)}function previousUnbalanced(e){let t=e.length;let n=false;while(t--){const r=e[t][1];if((r.type==="labelLink"||r.type==="labelImage")&&!r._balanced){n=true;break}if(r._gfmAutolinkLiteralWalkedInto){n=false;break}}if(e.length>0&&!n){e[e.length-1][1]._gfmAutolinkLiteralWalkedInto=true}return n}function factorySpace(e,t,n,r){const i=r?r-1:Number.POSITIVE_INFINITY;let o=0;return start;function start(r){if(markdownSpace(r)){e.enter(n);return prefix(r)}return t(r)}function prefix(r){if(markdownSpace(r)&&o++<i){e.consume(r);return prefix}e.exit(n);return t(r)}}const A={tokenize:tokenizeBlankLine,partial:true};function tokenizeBlankLine(e,t,n){return factorySpace(e,afterWhitespace,"linePrefix");function afterWhitespace(e){return e===null||markdownLineEnding(e)?t(e):n(e)}}function normalizeIdentifier(e){return e.replace(/[\t\n\r ]+/g," ").replace(/^ | $/g,"").toLowerCase().toUpperCase()}const E={tokenize:tokenizeIndent,partial:true};function gfmFootnote(){return{document:{[91]:{tokenize:tokenizeDefinitionStart,continuation:{tokenize:tokenizeDefinitionContinuation},exit:gfmFootnoteDefinitionEnd}},text:{[91]:{tokenize:tokenizeGfmFootnoteCall},[93]:{add:"after",tokenize:tokenizePotentialGfmFootnoteCall,resolveTo:resolveToPotentialGfmFootnoteCall}}}}function tokenizePotentialGfmFootnoteCall(e,t,n){const r=this;let i=r.events.length;const o=r.parser.gfmFootnotes||(r.parser.gfmFootnotes=[]);let a;while(i--){const e=r.events[i][1];if(e.type==="labelImage"){a=e;break}if(e.type==="gfmFootnoteCall"||e.type==="labelLink"||e.type==="label"||e.type==="image"||e.type==="link"){break}}return start;function start(i){if(!a||!a._balanced){return n(i)}const l=normalizeIdentifier(r.sliceSerialize({start:a.end,end:r.now()}));if(l.charCodeAt(0)!==94||!o.includes(l.slice(1))){return n(i)}e.enter("gfmFootnoteCallLabelMarker");e.consume(i);e.exit("gfmFootnoteCallLabelMarker");return t(i)}}function resolveToPotentialGfmFootnoteCall(e,t){let n=e.length;let r;while(n--){if(e[n][1].type==="labelImage"&&e[n][0]==="enter"){r=e[n][1];break}}e[n+1][1].type="data";e[n+3][1].type="gfmFootnoteCallLabelMarker";const i={type:"gfmFootnoteCall",start:Object.assign({},e[n+3][1].start),end:Object.assign({},e[e.length-1][1].end)};const o={type:"gfmFootnoteCallMarker",start:Object.assign({},e[n+3][1].end),end:Object.assign({},e[n+3][1].end)};o.end.column++;o.end.offset++;o.end._bufferIndex++;const a={type:"gfmFootnoteCallString",start:Object.assign({},o.end),end:Object.assign({},e[e.length-1][1].start)};const l={type:"chunkString",contentType:"string",start:Object.assign({},a.start),end:Object.assign({},a.end)};const c=[e[n+1],e[n+2],["enter",i,t],e[n+3],e[n+4],["enter",o,t],["exit",o,t],["enter",a,t],["enter",l,t],["exit",l,t],["exit",a,t],e[e.length-2],e[e.length-1],["exit",i,t]];e.splice(n,e.length-n+1,...c);return e}function tokenizeGfmFootnoteCall(e,t,n){const r=this;const i=r.parser.gfmFootnotes||(r.parser.gfmFootnotes=[]);let o=0;let a;return start;function start(t){e.enter("gfmFootnoteCall");e.enter("gfmFootnoteCallLabelMarker");e.consume(t);e.exit("gfmFootnoteCallLabelMarker");return callStart}function callStart(t){if(t!==94)return n(t);e.enter("gfmFootnoteCallMarker");e.consume(t);e.exit("gfmFootnoteCallMarker");e.enter("gfmFootnoteCallString");e.enter("chunkString").contentType="string";return callData}function callData(t){let l;if(t===null||t===91||o++>999){return n(t)}if(t===93){if(!a){return n(t)}e.exit("chunkString");l=e.exit("gfmFootnoteCallString");return i.includes(normalizeIdentifier(r.sliceSerialize(l)))?end(t):n(t)}e.consume(t);if(!markdownLineEndingOrSpace(t)){a=true}return t===92?callEscape:callData}function callEscape(t){if(t===91||t===92||t===93){e.consume(t);o++;return callData}return callData(t)}function end(n){e.enter("gfmFootnoteCallLabelMarker");e.consume(n);e.exit("gfmFootnoteCallLabelMarker");e.exit("gfmFootnoteCall");return t}}function tokenizeDefinitionStart(e,t,n){const r=this;const i=r.parser.gfmFootnotes||(r.parser.gfmFootnotes=[]);let o;let a=0;let l;return start;function start(t){e.enter("gfmFootnoteDefinition")._container=true;e.enter("gfmFootnoteDefinitionLabel");e.enter("gfmFootnoteDefinitionLabelMarker");e.consume(t);e.exit("gfmFootnoteDefinitionLabelMarker");return labelStart}function labelStart(t){if(t===94){e.enter("gfmFootnoteDefinitionMarker");e.consume(t);e.exit("gfmFootnoteDefinitionMarker");e.enter("gfmFootnoteDefinitionLabelString");return atBreak}return n(t)}function atBreak(t){let i;if(t===null||t===91||a>999){return n(t)}if(t===93){if(!l){return n(t)}i=e.exit("gfmFootnoteDefinitionLabelString");o=normalizeIdentifier(r.sliceSerialize(i));e.enter("gfmFootnoteDefinitionLabelMarker");e.consume(t);e.exit("gfmFootnoteDefinitionLabelMarker");e.exit("gfmFootnoteDefinitionLabel");return labelAfter}if(markdownLineEnding(t)){e.enter("lineEnding");e.consume(t);e.exit("lineEnding");a++;return atBreak}e.enter("chunkString").contentType="string";return label(t)}function label(t){if(t===null||markdownLineEnding(t)||t===91||t===93||a>999){e.exit("chunkString");return atBreak(t)}if(!markdownLineEndingOrSpace(t)){l=true}a++;e.consume(t);return t===92?labelEscape:label}function labelEscape(t){if(t===91||t===92||t===93){e.consume(t);a++;return label}return label(t)}function labelAfter(t){if(t===58){e.enter("definitionMarker");e.consume(t);e.exit("definitionMarker");return factorySpace(e,done,"gfmFootnoteDefinitionWhitespace")}return n(t)}function done(e){if(!i.includes(o)){i.push(o)}return t(e)}}function tokenizeDefinitionContinuation(e,t,n){return e.check(A,t,e.attempt(E,t,n))}function gfmFootnoteDefinitionEnd(e){e.exit("gfmFootnoteDefinition")}function tokenizeIndent(e,t,n){const r=this;return factorySpace(e,afterPrefix,"gfmFootnoteDefinitionIndent",4+1);function afterPrefix(e){const i=r.events[r.events.length-1];return i&&i[1].type==="gfmFootnoteDefinitionIndent"&&i[2].sliceSerialize(i[1],true).length===4?t(e):n(e)}}function classifyCharacter(e){if(e===null||markdownLineEndingOrSpace(e)||f(e)){return 1}if(d(e)){return 2}}function resolveAll(e,t,n){const r=[];let i=-1;while(++i<e.length){const o=e[i].resolveAll;if(o&&!r.includes(o)){t=o(t,n);r.push(o)}}return t}function gfmStrikethrough(e={}){let t=e.singleTilde;const n={tokenize:tokenizeStrikethrough,resolveAll:resolveAllStrikethrough};if(t===null||t===undefined){t=true}return{text:{[126]:n},insideSpan:{null:[n]},attentionMarkers:{null:[126]}};function resolveAllStrikethrough(e,t){let n=-1;while(++n<e.length){if(e[n][0]==="enter"&&e[n][1].type==="strikethroughSequenceTemporary"&&e[n][1]._close){let r=n;while(r--){if(e[r][0]==="exit"&&e[r][1].type==="strikethroughSequenceTemporary"&&e[r][1]._open&&e[n][1].end.offset-e[n][1].start.offset===e[r][1].end.offset-e[r][1].start.offset){e[n][1].type="strikethroughSequence";e[r][1].type="strikethroughSequence";const i={type:"strikethrough",start:Object.assign({},e[r][1].start),end:Object.assign({},e[n][1].end)};const o={type:"strikethroughText",start:Object.assign({},e[r][1].end),end:Object.assign({},e[n][1].start)};const a=[["enter",i,t],["enter",e[r][1],t],["exit",e[r][1],t],["enter",o,t]];splice(a,a.length,0,resolveAll(t.parser.constructs.insideSpan.null,e.slice(r+1,n),t));splice(a,a.length,0,[["exit",o,t],["enter",e[n][1],t],["exit",e[n][1],t],["exit",i,t]]);splice(e,r-1,n-r+3,a);n=r+a.length-2;break}}}}n=-1;while(++n<e.length){if(e[n][1].type==="strikethroughSequenceTemporary"){e[n][1].type="data"}}return e}function tokenizeStrikethrough(e,n,r){const i=this.previous;const o=this.events;let a=0;return start;function start(t){if(i===126&&o[o.length-1][1].type!=="characterEscape"){return r(t)}e.enter("strikethroughSequenceTemporary");return more(t)}function more(o){const l=classifyCharacter(i);if(o===126){if(a>1)return r(o);e.consume(o);a++;return more}if(a<2&&!t)return r(o);const c=e.exit("strikethroughSequenceTemporary");const u=classifyCharacter(o);c._open=!u||u===2&&Boolean(l);c._close=!l||l===2&&Boolean(u);return n(o)}}}const F={flow:{null:{tokenize:tokenizeTable,resolve:resolveTable}}};const q={tokenize:tokenizeNextPrefixedOrBlank,partial:true};function resolveTable(e,t){let n=-1;let r;let i;let o;let a;let l;let c;let u;while(++n<e.length){const f=e[n][1];if(o){if(f.type==="temporaryTableCellContent"){a=a||n;l=n}if((f.type==="tableCellDivider"||f.type==="tableRow")&&l){const r={type:"tableContent",start:e[a][1].start,end:e[l][1].end};const i={type:"chunkText",start:r.start,end:r.end,contentType:"text"};e.splice(a,l-a+1,["enter",r,t],["enter",i,t],["exit",i,t],["exit",r,t]);n-=l-a-3;a=undefined;l=undefined}}if(e[n][0]==="exit"&&c!==undefined&&c+(u?0:1)<n&&(f.type==="tableCellDivider"||f.type==="tableRow"&&(c+3<n||e[c][1].type!=="whitespace"))){const o={type:i?"tableDelimiter":r?"tableHeader":"tableData",start:e[c][1].start,end:e[n][1].end};e.splice(n+(f.type==="tableCellDivider"?1:0),0,["exit",o,t]);e.splice(c,0,["enter",o,t]);n+=2;c=n+1;u=true}if(f.type==="tableRow"){o=e[n][0]==="enter";if(o){c=n+1;u=false}}if(f.type==="tableDelimiterRow"){i=e[n][0]==="enter";if(i){c=n+1;u=false}}if(f.type==="tableHead"){r=e[n][0]==="enter"}}return e}function tokenizeTable(e,t,n){const r=this;const i=[];let o=0;let a;let l;return start;function start(t){e.enter("table")._align=i;e.enter("tableHead");e.enter("tableRow");if(t===124){return cellDividerHead(t)}o++;e.enter("temporaryTableCellContent");return inCellContentHead(t)}function cellDividerHead(t){e.enter("tableCellDivider");e.consume(t);e.exit("tableCellDivider");a=true;return cellBreakHead}function cellBreakHead(t){if(t===null||markdownLineEnding(t)){return atRowEndHead(t)}if(markdownSpace(t)){e.enter("whitespace");e.consume(t);return inWhitespaceHead}if(a){a=undefined;o++}if(t===124){return cellDividerHead(t)}e.enter("temporaryTableCellContent");return inCellContentHead(t)}function inWhitespaceHead(t){if(markdownSpace(t)){e.consume(t);return inWhitespaceHead}e.exit("whitespace");return cellBreakHead(t)}function inCellContentHead(t){if(t===null||t===124||markdownLineEndingOrSpace(t)){e.exit("temporaryTableCellContent");return cellBreakHead(t)}e.consume(t);return t===92?inCellContentEscapeHead:inCellContentHead}function inCellContentEscapeHead(t){if(t===92||t===124){e.consume(t);return inCellContentHead}return inCellContentHead(t)}function atRowEndHead(t){if(t===null){return n(t)}e.exit("tableRow");e.exit("tableHead");const i=r.interrupt;r.interrupt=true;return e.attempt({tokenize:tokenizeRowEnd,partial:true},(function(t){r.interrupt=i;e.enter("tableDelimiterRow");return atDelimiterRowBreak(t)}),(function(e){r.interrupt=i;return n(e)}))(t)}function atDelimiterRowBreak(t){if(t===null||markdownLineEnding(t)){return rowEndDelimiter(t)}if(markdownSpace(t)){e.enter("whitespace");e.consume(t);return inWhitespaceDelimiter}if(t===45){e.enter("tableDelimiterFiller");e.consume(t);l=true;i.push("none");return inFillerDelimiter}if(t===58){e.enter("tableDelimiterAlignment");e.consume(t);e.exit("tableDelimiterAlignment");i.push("left");return afterLeftAlignment}if(t===124){e.enter("tableCellDivider");e.consume(t);e.exit("tableCellDivider");return atDelimiterRowBreak}return n(t)}function inWhitespaceDelimiter(t){if(markdownSpace(t)){e.consume(t);return inWhitespaceDelimiter}e.exit("whitespace");return atDelimiterRowBreak(t)}function inFillerDelimiter(t){if(t===45){e.consume(t);return inFillerDelimiter}e.exit("tableDelimiterFiller");if(t===58){e.enter("tableDelimiterAlignment");e.consume(t);e.exit("tableDelimiterAlignment");i[i.length-1]=i[i.length-1]==="left"?"center":"right";return afterRightAlignment}return atDelimiterRowBreak(t)}function afterLeftAlignment(t){if(t===45){e.enter("tableDelimiterFiller");e.consume(t);l=true;return inFillerDelimiter}return n(t)}function afterRightAlignment(t){if(t===null||markdownLineEnding(t)){return rowEndDelimiter(t)}if(markdownSpace(t)){e.enter("whitespace");e.consume(t);return inWhitespaceDelimiter}if(t===124){e.enter("tableCellDivider");e.consume(t);e.exit("tableCellDivider");return atDelimiterRowBreak}return n(t)}function rowEndDelimiter(t){e.exit("tableDelimiterRow");if(!l||o!==i.length){return n(t)}if(t===null){return tableClose(t)}return e.check(q,tableClose,e.attempt({tokenize:tokenizeRowEnd,partial:true},factorySpace(e,bodyStart,"linePrefix",4),tableClose))(t)}function tableClose(n){e.exit("table");return t(n)}function bodyStart(t){e.enter("tableBody");return rowStartBody(t)}function rowStartBody(t){e.enter("tableRow");if(t===124){return cellDividerBody(t)}e.enter("temporaryTableCellContent");return inCellContentBody(t)}function cellDividerBody(t){e.enter("tableCellDivider");e.consume(t);e.exit("tableCellDivider");return cellBreakBody}function cellBreakBody(t){if(t===null||markdownLineEnding(t)){return atRowEndBody(t)}if(markdownSpace(t)){e.enter("whitespace");e.consume(t);return inWhitespaceBody}if(t===124){return cellDividerBody(t)}e.enter("temporaryTableCellContent");return inCellContentBody(t)}function inWhitespaceBody(t){if(markdownSpace(t)){e.consume(t);return inWhitespaceBody}e.exit("whitespace");return cellBreakBody(t)}function inCellContentBody(t){if(t===null||t===124||markdownLineEndingOrSpace(t)){e.exit("temporaryTableCellContent");return cellBreakBody(t)}e.consume(t);return t===92?inCellContentEscapeBody:inCellContentBody}function inCellContentEscapeBody(t){if(t===92||t===124){e.consume(t);return inCellContentBody}return inCellContentBody(t)}function atRowEndBody(t){e.exit("tableRow");if(t===null){return tableBodyClose(t)}return e.check(q,tableBodyClose,e.attempt({tokenize:tokenizeRowEnd,partial:true},factorySpace(e,rowStartBody,"linePrefix",4),tableBodyClose))(t)}function tableBodyClose(t){e.exit("tableBody");return tableClose(t)}function tokenizeRowEnd(e,t,n){return start;function start(t){e.enter("lineEnding");e.consume(t);e.exit("lineEnding");return factorySpace(e,prefixed,"linePrefix")}function prefixed(i){if(r.parser.lazy[r.now().line]||i===null||markdownLineEnding(i)){return n(i)}const o=r.events[r.events.length-1];if(!r.parser.constructs.disable.null.includes("codeIndented")&&o&&o[1].type==="linePrefix"&&o[2].sliceSerialize(o[1],true).length>=4){return n(i)}r._gfmTableDynamicInterruptHack=true;return e.check(r.parser.constructs.flow,(function(e){r._gfmTableDynamicInterruptHack=false;return n(e)}),(function(e){r._gfmTableDynamicInterruptHack=false;return t(e)}))(i)}}}function tokenizeNextPrefixedOrBlank(e,t,n){let r=0;return start;function start(t){e.enter("check");e.consume(t);return whitespace}function whitespace(i){if(i===-1||i===32){e.consume(i);r++;return r===4?t:whitespace}if(i===null||markdownLineEndingOrSpace(i)){return t(i)}return n(i)}}const S={tokenize:tokenizeTasklistCheck};const L={text:{[91]:S}};function tokenizeTasklistCheck(e,t,n){const r=this;return open;function open(t){if(r.previous!==null||!r._gfmTasklistFirstContentOfListItem){return n(t)}e.enter("taskListCheck");e.enter("taskListCheckMarker");e.consume(t);e.exit("taskListCheckMarker");return inside}function inside(t){if(markdownLineEndingOrSpace(t)){e.enter("taskListCheckValueUnchecked");e.consume(t);e.exit("taskListCheckValueUnchecked");return close}if(t===88||t===120){e.enter("taskListCheckValueChecked");e.consume(t);e.exit("taskListCheckValueChecked");return close}return n(t)}function close(r){if(r===93){e.enter("taskListCheckMarker");e.consume(r);e.exit("taskListCheckMarker");e.exit("taskListCheck");return e.check({tokenize:spaceThenNonSpace},t,n)}return n(r)}}function spaceThenNonSpace(e,t,n){const r=this;return factorySpace(e,after,"whitespace");function after(e){const i=r.events[r.events.length-1];return(i&&i[1].type==="whitespace"||markdownLineEnding(e))&&e!==null?t(e):n(e)}}function gfm(e){return combineExtensions([v,gfmFootnote(),gfmStrikethrough(e),F,L])}function gfmHtml(e){return combineHtmlExtensions([gfmAutolinkLiteralHtml,gfmFootnoteHtml(e),gfmStrikethroughHtml,gfmTableHtml,gfmTagfilterHtml,gfmTaskListItemHtml])}function ccount(e,t){const n=String(e);if(typeof t!=="string"){throw new TypeError("Expected character")}let r=0;let i=n.indexOf(t);while(i!==-1){r++;i=n.indexOf(t,i+t.length)}return r}function escapeStringRegexp(e){if(typeof e!=="string"){throw new TypeError("Expected a string")}return e.replace(/[|\\{}()[\]^$+*?.]/g,"\\$&").replace(/-/g,"\\x2d")}const T=function is(e,t,n,r,i){const o=convert(t);if(n!==undefined&&n!==null&&(typeof n!=="number"||n<0||n===Number.POSITIVE_INFINITY)){throw new Error("Expected positive finite index")}if(r!==undefined&&r!==null&&(!is(r)||!r.children)){throw new Error("Expected parent node")}if((r===undefined||r===null)!==(n===undefined||n===null)){throw new Error("Expected both parent and index")}return e&&e.type&&typeof e.type==="string"?Boolean(o.call(i,e,n,r)):false};const convert=function(e){if(e===undefined||e===null){return ok}if(typeof e==="string"){return typeFactory(e)}if(typeof e==="object"){return Array.isArray(e)?anyFactory(e):propsFactory(e)}if(typeof e==="function"){return castFactory(e)}throw new Error("Expected function, string, or object as test")};function anyFactory(e){const t=[];let n=-1;while(++n<e.length){t[n]=convert(e[n])}return castFactory(any);function any(...e){let n=-1;while(++n<t.length){if(t[n].call(this,...e))return true}return false}}function propsFactory(e){return castFactory(all);function all(t){let n;for(n in e){if(t[n]!==e[n])return false}return true}}function typeFactory(e){return castFactory(type);function type(t){return t&&t.type===e}}function castFactory(e){return assertion;function assertion(...t){return Boolean(e.call(this,...t))}}function ok(){return true}function color(e){return"[33m"+e+"[39m"}const B=true;const R="skip";const z=false;const visitParents=function(e,t,n,r){if(typeof t==="function"&&typeof n!=="function"){r=n;n=t;t=null}const i=convert(t);const o=r?-1:1;factory(e,null,[])();function factory(e,a,l){const c=typeof e==="object"&&e!==null?e:{};let u;if(typeof c.type==="string"){u=typeof c.tagName==="string"?c.tagName:typeof c.name==="string"?c.name:undefined;Object.defineProperty(visit,"name",{value:"node ("+color(c.type+(u?"<"+u+">":""))+")"})}return visit;function visit(){let c=[];let u;let f;let d;if(!t||i(e,a,l[l.length-1]||null)){c=toResult(n(e,l));if(c[0]===z){return c}}if(e.children&&c[0]!==R){f=(r?e.children.length:-1)+o;d=l.concat(e);while(f>-1&&f<e.children.length){u=factory(e.children[f],f,d)();if(u[0]===z){return u}f=typeof u[1]==="number"?u[1]:f+o}}return c}}};function toResult(e){if(Array.isArray(e)){return e}if(typeof e==="number"){return[B,e]}return[e]}const I={}.hasOwnProperty;const findAndReplace=function(e,t,n,r){let i;let o;if(typeof t==="string"||t instanceof RegExp){o=[[t,n]];i=r}else{o=t;i=n}if(!i){i={}}const a=convert(i.ignore||[]);const l=toPairs(o);let c=-1;while(++c<l.length){visitParents(e,"text",visitor)}return e;function visitor(e,t){let n=-1;let r;while(++n<t.length){const e=t[n];if(a(e,r?r.children.indexOf(e):undefined,r)){return}r=e}if(r){return handler(e,t)}}function handler(e,t){const n=t[t.length-1];const r=l[c][0];const i=l[c][1];let o=0;const a=n.children.indexOf(e);let u=false;let f=[];let d;r.lastIndex=0;let h=r.exec(e.value);while(h){d=h.index;const n={index:h.index,input:h.input,stack:[...t,e]};let a=i(...h,n);if(typeof a==="string"){a=a.length>0?{type:"text",value:a}:undefined}if(a!==false){if(o!==d){f.push({type:"text",value:e.value.slice(o,d)})}if(Array.isArray(a)){f.push(...a)}else if(a){f.push(a)}o=d+h[0].length;u=true}if(!r.global){break}h=r.exec(e.value)}if(u){if(o<e.value.length){f.push({type:"text",value:e.value.slice(o)})}n.children.splice(a,1,...f)}else{f=[e]}return a+f.length}};function toPairs(e){const t=[];if(typeof e!=="object"){throw new TypeError("Expected array or object as schema")}if(Array.isArray(e)){let n=-1;while(++n<e.length){t.push([toExpression(e[n][0]),toFunction(e[n][1])])}}else{let n;for(n in e){if(I.call(e,n)){t.push([toExpression(n),toFunction(e[n])])}}}return t}function toExpression(e){return typeof e==="string"?new RegExp(escapeStringRegexp(e),"g"):e}function toFunction(e){return typeof e==="function"?e:()=>e}const N="phrasing";const P=["autolink","link","image","label"];const H={transforms:[transformGfmAutolinkLiterals],enter:{literalAutolink:enterLiteralAutolink,literalAutolinkEmail:enterLiteralAutolinkValue,literalAutolinkHttp:enterLiteralAutolinkValue,literalAutolinkWww:enterLiteralAutolinkValue},exit:{literalAutolink:exitLiteralAutolink,literalAutolinkEmail:exitLiteralAutolinkEmail,literalAutolinkHttp:exitLiteralAutolinkHttp,literalAutolinkWww:exitLiteralAutolinkWww}};const O={unsafe:[{character:"@",before:"[+\\-.\\w]",after:"[\\-.\\w]",inConstruct:N,notInConstruct:P},{character:".",before:"[Ww]",after:"[\\-.\\w]",inConstruct:N,notInConstruct:P},{character:":",before:"[ps]",after:"\\/",inConstruct:N,notInConstruct:P}]};function enterLiteralAutolink(e){this.enter({type:"link",title:null,url:"",children:[]},e)}function enterLiteralAutolinkValue(e){this.config.enter.autolinkProtocol.call(this,e)}function exitLiteralAutolinkHttp(e){this.config.exit.autolinkProtocol.call(this,e)}function exitLiteralAutolinkWww(e){this.config.exit.data.call(this,e);const t=this.stack[this.stack.length-1];t.url="http://"+this.sliceSerialize(e)}function exitLiteralAutolinkEmail(e){this.config.exit.autolinkEmail.call(this,e)}function exitLiteralAutolink(e){this.exit(e)}function transformGfmAutolinkLiterals(e){findAndReplace(e,[[/(https?:\/\/|www(?=\.))([-.\w]+)([^ \t\r\n]*)/gi,findUrl],[/([-.\w+]+)@([-\w]+(?:\.[-\w]+)+)/g,findEmail]],{ignore:["link","linkReference"]})}function findUrl(e,t,n,r,i){let o="";if(!previous(i)){return false}if(/^w/i.test(t)){n=t+n;t="";o="http://"}if(!isCorrectDomain(n)){return false}const a=splitUrl(n+r);if(!a[0])return false;const l={type:"link",title:null,url:o+t+a[0],children:[{type:"text",value:t+a[0]}]};if(a[1]){return[l,{type:"text",value:a[1]}]}return l}function findEmail(e,t,n,r){if(!previous(r,true)||/[_-\d]$/.test(n)){return false}return{type:"link",title:null,url:"mailto:"+t+"@"+n,children:[{type:"text",value:t+"@"+n}]}}function isCorrectDomain(e){const t=e.split(".");if(t.length<2||t[t.length-1]&&(/_/.test(t[t.length-1])||!/[a-zA-Z\d]/.test(t[t.length-1]))||t[t.length-2]&&(/_/.test(t[t.length-2])||!/[a-zA-Z\d]/.test(t[t.length-2]))){return false}return true}function splitUrl(e){const t=/[!"&'),.:;<>?\]}]+$/.exec(e);let n;let r;let i;let o;if(t){e=e.slice(0,t.index);o=t[0];n=o.indexOf(")");r=ccount(e,"(");i=ccount(e,")");while(n!==-1&&r>i){e+=o.slice(0,n+1);o=o.slice(n+1);n=o.indexOf(")");i++}}return[e,o]}function previous(e,t){const n=e.input.charCodeAt(e.index-1);return(e.index===0||f(n)||d(n))&&(!t||n!==47)}const U={AElig:"Æ",AMP:"&",Aacute:"Á",Abreve:"Ă",Acirc:"Â",Acy:"А",Afr:"𝔄",Agrave:"À",Alpha:"Α",Amacr:"Ā",And:"⩓",Aogon:"Ą",Aopf:"𝔸",ApplyFunction:"⁡",Aring:"Å",Ascr:"𝒜",Assign:"≔",Atilde:"Ã",Auml:"Ä",Backslash:"∖",Barv:"⫧",Barwed:"⌆",Bcy:"Б",Because:"∵",Bernoullis:"ℬ",Beta:"Β",Bfr:"𝔅",Bopf:"𝔹",Breve:"˘",Bscr:"ℬ",Bumpeq:"≎",CHcy:"Ч",COPY:"©",Cacute:"Ć",Cap:"⋒",CapitalDifferentialD:"ⅅ",Cayleys:"ℭ",Ccaron:"Č",Ccedil:"Ç",Ccirc:"Ĉ",Cconint:"∰",Cdot:"Ċ",Cedilla:"¸",CenterDot:"·",Cfr:"ℭ",Chi:"Χ",CircleDot:"⊙",CircleMinus:"⊖",CirclePlus:"⊕",CircleTimes:"⊗",ClockwiseContourIntegral:"∲",CloseCurlyDoubleQuote:"”",CloseCurlyQuote:"’",Colon:"∷",Colone:"⩴",Congruent:"≡",Conint:"∯",ContourIntegral:"∮",Copf:"ℂ",Coproduct:"∐",CounterClockwiseContourIntegral:"∳",Cross:"⨯",Cscr:"𝒞",Cup:"⋓",CupCap:"≍",DD:"ⅅ",DDotrahd:"⤑",DJcy:"Ђ",DScy:"Ѕ",DZcy:"Џ",Dagger:"‡",Darr:"↡",Dashv:"⫤",Dcaron:"Ď",Dcy:"Д",Del:"∇",Delta:"Δ",Dfr:"𝔇",DiacriticalAcute:"´",DiacriticalDot:"˙",DiacriticalDoubleAcute:"˝",DiacriticalGrave:"`",DiacriticalTilde:"˜",Diamond:"⋄",DifferentialD:"ⅆ",Dopf:"𝔻",Dot:"¨",DotDot:"⃜",DotEqual:"≐",DoubleContourIntegral:"∯",DoubleDot:"¨",DoubleDownArrow:"⇓",DoubleLeftArrow:"⇐",DoubleLeftRightArrow:"⇔",DoubleLeftTee:"⫤",DoubleLongLeftArrow:"⟸",DoubleLongLeftRightArrow:"⟺",DoubleLongRightArrow:"⟹",DoubleRightArrow:"⇒",DoubleRightTee:"⊨",DoubleUpArrow:"⇑",DoubleUpDownArrow:"⇕",DoubleVerticalBar:"∥",DownArrow:"↓",DownArrowBar:"⤓",DownArrowUpArrow:"⇵",DownBreve:"̑",DownLeftRightVector:"⥐",DownLeftTeeVector:"⥞",DownLeftVector:"↽",DownLeftVectorBar:"⥖",DownRightTeeVector:"⥟",DownRightVector:"⇁",DownRightVectorBar:"⥗",DownTee:"⊤",DownTeeArrow:"↧",Downarrow:"⇓",Dscr:"𝒟",Dstrok:"Đ",ENG:"Ŋ",ETH:"Ð",Eacute:"É",Ecaron:"Ě",Ecirc:"Ê",Ecy:"Э",Edot:"Ė",Efr:"𝔈",Egrave:"È",Element:"∈",Emacr:"Ē",EmptySmallSquare:"◻",EmptyVerySmallSquare:"▫",Eogon:"Ę",Eopf:"𝔼",Epsilon:"Ε",Equal:"⩵",EqualTilde:"≂",Equilibrium:"⇌",Escr:"ℰ",Esim:"⩳",Eta:"Η",Euml:"Ë",Exists:"∃",ExponentialE:"ⅇ",Fcy:"Ф",Ffr:"𝔉",FilledSmallSquare:"◼",FilledVerySmallSquare:"▪",Fopf:"𝔽",ForAll:"∀",Fouriertrf:"ℱ",Fscr:"ℱ",GJcy:"Ѓ",GT:">",Gamma:"Γ",Gammad:"Ϝ",Gbreve:"Ğ",Gcedil:"Ģ",Gcirc:"Ĝ",Gcy:"Г",Gdot:"Ġ",Gfr:"𝔊",Gg:"⋙",Gopf:"𝔾",GreaterEqual:"≥",GreaterEqualLess:"⋛",GreaterFullEqual:"≧",GreaterGreater:"⪢",GreaterLess:"≷",GreaterSlantEqual:"⩾",GreaterTilde:"≳",Gscr:"𝒢",Gt:"≫",HARDcy:"Ъ",Hacek:"ˇ",Hat:"^",Hcirc:"Ĥ",Hfr:"ℌ",HilbertSpace:"ℋ",Hopf:"ℍ",HorizontalLine:"─",Hscr:"ℋ",Hstrok:"Ħ",HumpDownHump:"≎",HumpEqual:"≏",IEcy:"Е",IJlig:"Ĳ",IOcy:"Ё",Iacute:"Í",Icirc:"Î",Icy:"И",Idot:"İ",Ifr:"ℑ",Igrave:"Ì",Im:"ℑ",Imacr:"Ī",ImaginaryI:"ⅈ",Implies:"⇒",Int:"∬",Integral:"∫",Intersection:"⋂",InvisibleComma:"⁣",InvisibleTimes:"⁢",Iogon:"Į",Iopf:"𝕀",Iota:"Ι",Iscr:"ℐ",Itilde:"Ĩ",Iukcy:"І",Iuml:"Ï",Jcirc:"Ĵ",Jcy:"Й",Jfr:"𝔍",Jopf:"𝕁",Jscr:"𝒥",Jsercy:"Ј",Jukcy:"Є",KHcy:"Х",KJcy:"Ќ",Kappa:"Κ",Kcedil:"Ķ",Kcy:"К",Kfr:"𝔎",Kopf:"𝕂",Kscr:"𝒦",LJcy:"Љ",LT:"<",Lacute:"Ĺ",Lambda:"Λ",Lang:"⟪",Laplacetrf:"ℒ",Larr:"↞",Lcaron:"Ľ",Lcedil:"Ļ",Lcy:"Л",LeftAngleBracket:"⟨",LeftArrow:"←",LeftArrowBar:"⇤",LeftArrowRightArrow:"⇆",LeftCeiling:"⌈",LeftDoubleBracket:"⟦",LeftDownTeeVector:"⥡",LeftDownVector:"⇃",LeftDownVectorBar:"⥙",LeftFloor:"⌊",LeftRightArrow:"↔",LeftRightVector:"⥎",LeftTee:"⊣",LeftTeeArrow:"↤",LeftTeeVector:"⥚",LeftTriangle:"⊲",LeftTriangleBar:"⧏",LeftTriangleEqual:"⊴",LeftUpDownVector:"⥑",LeftUpTeeVector:"⥠",LeftUpVector:"↿",LeftUpVectorBar:"⥘",LeftVector:"↼",LeftVectorBar:"⥒",Leftarrow:"⇐",Leftrightarrow:"⇔",LessEqualGreater:"⋚",LessFullEqual:"≦",LessGreater:"≶",LessLess:"⪡",LessSlantEqual:"⩽",LessTilde:"≲",Lfr:"𝔏",Ll:"⋘",Lleftarrow:"⇚",Lmidot:"Ŀ",LongLeftArrow:"⟵",LongLeftRightArrow:"⟷",LongRightArrow:"⟶",Longleftarrow:"⟸",Longleftrightarrow:"⟺",Longrightarrow:"⟹",Lopf:"𝕃",LowerLeftArrow:"↙",LowerRightArrow:"↘",Lscr:"ℒ",Lsh:"↰",Lstrok:"Ł",Lt:"≪",Map:"⤅",Mcy:"М",MediumSpace:" ",Mellintrf:"ℳ",Mfr:"𝔐",MinusPlus:"∓",Mopf:"𝕄",Mscr:"ℳ",Mu:"Μ",NJcy:"Њ",Nacute:"Ń",Ncaron:"Ň",Ncedil:"Ņ",Ncy:"Н",NegativeMediumSpace:"​",NegativeThickSpace:"​",NegativeThinSpace:"​",NegativeVeryThinSpace:"​",NestedGreaterGreater:"≫",NestedLessLess:"≪",NewLine:"\n",Nfr:"𝔑",NoBreak:"⁠",NonBreakingSpace:" ",Nopf:"ℕ",Not:"⫬",NotCongruent:"≢",NotCupCap:"≭",NotDoubleVerticalBar:"∦",NotElement:"∉",NotEqual:"≠",NotEqualTilde:"≂̸",NotExists:"∄",NotGreater:"≯",NotGreaterEqual:"≱",NotGreaterFullEqual:"≧̸",NotGreaterGreater:"≫̸",NotGreaterLess:"≹",NotGreaterSlantEqual:"⩾̸",NotGreaterTilde:"≵",NotHumpDownHump:"≎̸",NotHumpEqual:"≏̸",NotLeftTriangle:"⋪",NotLeftTriangleBar:"⧏̸",NotLeftTriangleEqual:"⋬",NotLess:"≮",NotLessEqual:"≰",NotLessGreater:"≸",NotLessLess:"≪̸",NotLessSlantEqual:"⩽̸",NotLessTilde:"≴",NotNestedGreaterGreater:"⪢̸",NotNestedLessLess:"⪡̸",NotPrecedes:"⊀",NotPrecedesEqual:"⪯̸",NotPrecedesSlantEqual:"⋠",NotReverseElement:"∌",NotRightTriangle:"⋫",NotRightTriangleBar:"⧐̸",NotRightTriangleEqual:"⋭",NotSquareSubset:"⊏̸",NotSquareSubsetEqual:"⋢",NotSquareSuperset:"⊐̸",NotSquareSupersetEqual:"⋣",NotSubset:"⊂⃒",NotSubsetEqual:"⊈",NotSucceeds:"⊁",NotSucceedsEqual:"⪰̸",NotSucceedsSlantEqual:"⋡",NotSucceedsTilde:"≿̸",NotSuperset:"⊃⃒",NotSupersetEqual:"⊉",NotTilde:"≁",NotTildeEqual:"≄",NotTildeFullEqual:"≇",NotTildeTilde:"≉",NotVerticalBar:"∤",Nscr:"𝒩",Ntilde:"Ñ",Nu:"Ν",OElig:"Œ",Oacute:"Ó",Ocirc:"Ô",Ocy:"О",Odblac:"Ő",Ofr:"𝔒",Ograve:"Ò",Omacr:"Ō",Omega:"Ω",Omicron:"Ο",Oopf:"𝕆",OpenCurlyDoubleQuote:"“",OpenCurlyQuote:"‘",Or:"⩔",Oscr:"𝒪",Oslash:"Ø",Otilde:"Õ",Otimes:"⨷",Ouml:"Ö",OverBar:"‾",OverBrace:"⏞",OverBracket:"⎴",OverParenthesis:"⏜",PartialD:"∂",Pcy:"П",Pfr:"𝔓",Phi:"Φ",Pi:"Π",PlusMinus:"±",Poincareplane:"ℌ",Popf:"ℙ",Pr:"⪻",Precedes:"≺",PrecedesEqual:"⪯",PrecedesSlantEqual:"≼",PrecedesTilde:"≾",Prime:"″",Product:"∏",Proportion:"∷",Proportional:"∝",Pscr:"𝒫",Psi:"Ψ",QUOT:'"',Qfr:"𝔔",Qopf:"ℚ",Qscr:"𝒬",RBarr:"⤐",REG:"®",Racute:"Ŕ",Rang:"⟫",Rarr:"↠",Rarrtl:"⤖",Rcaron:"Ř",Rcedil:"Ŗ",Rcy:"Р",Re:"ℜ",ReverseElement:"∋",ReverseEquilibrium:"⇋",ReverseUpEquilibrium:"⥯",Rfr:"ℜ",Rho:"Ρ",RightAngleBracket:"⟩",RightArrow:"→",RightArrowBar:"⇥",RightArrowLeftArrow:"⇄",RightCeiling:"⌉",RightDoubleBracket:"⟧",RightDownTeeVector:"⥝",RightDownVector:"⇂",RightDownVectorBar:"⥕",RightFloor:"⌋",RightTee:"⊢",RightTeeArrow:"↦",RightTeeVector:"⥛",RightTriangle:"⊳",RightTriangleBar:"⧐",RightTriangleEqual:"⊵",RightUpDownVector:"⥏",RightUpTeeVector:"⥜",RightUpVector:"↾",RightUpVectorBar:"⥔",RightVector:"⇀",RightVectorBar:"⥓",Rightarrow:"⇒",Ropf:"ℝ",RoundImplies:"⥰",Rrightarrow:"⇛",Rscr:"ℛ",Rsh:"↱",RuleDelayed:"⧴",SHCHcy:"Щ",SHcy:"Ш",SOFTcy:"Ь",Sacute:"Ś",Sc:"⪼",Scaron:"Š",Scedil:"Ş",Scirc:"Ŝ",Scy:"С",Sfr:"𝔖",ShortDownArrow:"↓",ShortLeftArrow:"←",ShortRightArrow:"→",ShortUpArrow:"↑",Sigma:"Σ",SmallCircle:"∘",Sopf:"𝕊",Sqrt:"√",Square:"□",SquareIntersection:"⊓",SquareSubset:"⊏",SquareSubsetEqual:"⊑",SquareSuperset:"⊐",SquareSupersetEqual:"⊒",SquareUnion:"⊔",Sscr:"𝒮",Star:"⋆",Sub:"⋐",Subset:"⋐",SubsetEqual:"⊆",Succeeds:"≻",SucceedsEqual:"⪰",SucceedsSlantEqual:"≽",SucceedsTilde:"≿",SuchThat:"∋",Sum:"∑",Sup:"⋑",Superset:"⊃",SupersetEqual:"⊇",Supset:"⋑",THORN:"Þ",TRADE:"™",TSHcy:"Ћ",TScy:"Ц",Tab:"\t",Tau:"Τ",Tcaron:"Ť",Tcedil:"Ţ",Tcy:"Т",Tfr:"𝔗",Therefore:"∴",Theta:"Θ",ThickSpace:"  ",ThinSpace:" ",Tilde:"∼",TildeEqual:"≃",TildeFullEqual:"≅",TildeTilde:"≈",Topf:"𝕋",TripleDot:"⃛",Tscr:"𝒯",Tstrok:"Ŧ",Uacute:"Ú",Uarr:"↟",Uarrocir:"⥉",Ubrcy:"Ў",Ubreve:"Ŭ",Ucirc:"Û",Ucy:"У",Udblac:"Ű",Ufr:"𝔘",Ugrave:"Ù",Umacr:"Ū",UnderBar:"_",UnderBrace:"⏟",UnderBracket:"⎵",UnderParenthesis:"⏝",Union:"⋃",UnionPlus:"⊎",Uogon:"Ų",Uopf:"𝕌",UpArrow:"↑",UpArrowBar:"⤒",UpArrowDownArrow:"⇅",UpDownArrow:"↕",UpEquilibrium:"⥮",UpTee:"⊥",UpTeeArrow:"↥",Uparrow:"⇑",Updownarrow:"⇕",UpperLeftArrow:"↖",UpperRightArrow:"↗",Upsi:"ϒ",Upsilon:"Υ",Uring:"Ů",Uscr:"𝒰",Utilde:"Ũ",Uuml:"Ü",VDash:"⊫",Vbar:"⫫",Vcy:"В",Vdash:"⊩",Vdashl:"⫦",Vee:"⋁",Verbar:"‖",Vert:"‖",VerticalBar:"∣",VerticalLine:"|",VerticalSeparator:"❘",VerticalTilde:"≀",VeryThinSpace:" ",Vfr:"𝔙",Vopf:"𝕍",Vscr:"𝒱",Vvdash:"⊪",Wcirc:"Ŵ",Wedge:"⋀",Wfr:"𝔚",Wopf:"𝕎",Wscr:"𝒲",Xfr:"𝔛",Xi:"Ξ",Xopf:"𝕏",Xscr:"𝒳",YAcy:"Я",YIcy:"Ї",YUcy:"Ю",Yacute:"Ý",Ycirc:"Ŷ",Ycy:"Ы",Yfr:"𝔜",Yopf:"𝕐",Yscr:"𝒴",Yuml:"Ÿ",ZHcy:"Ж",Zacute:"Ź",Zcaron:"Ž",Zcy:"З",Zdot:"Ż",ZeroWidthSpace:"​",Zeta:"Ζ",Zfr:"ℨ",Zopf:"ℤ",Zscr:"𝒵",aacute:"á",abreve:"ă",ac:"∾",acE:"∾̳",acd:"∿",acirc:"â",acute:"´",acy:"а",aelig:"æ",af:"⁡",afr:"𝔞",agrave:"à",alefsym:"ℵ",aleph:"ℵ",alpha:"α",amacr:"ā",amalg:"⨿",amp:"&",and:"∧",andand:"⩕",andd:"⩜",andslope:"⩘",andv:"⩚",ang:"∠",ange:"⦤",angle:"∠",angmsd:"∡",angmsdaa:"⦨",angmsdab:"⦩",angmsdac:"⦪",angmsdad:"⦫",angmsdae:"⦬",angmsdaf:"⦭",angmsdag:"⦮",angmsdah:"⦯",angrt:"∟",angrtvb:"⊾",angrtvbd:"⦝",angsph:"∢",angst:"Å",angzarr:"⍼",aogon:"ą",aopf:"𝕒",ap:"≈",apE:"⩰",apacir:"⩯",ape:"≊",apid:"≋",apos:"'",approx:"≈",approxeq:"≊",aring:"å",ascr:"𝒶",ast:"*",asymp:"≈",asympeq:"≍",atilde:"ã",auml:"ä",awconint:"∳",awint:"⨑",bNot:"⫭",backcong:"≌",backepsilon:"϶",backprime:"‵",backsim:"∽",backsimeq:"⋍",barvee:"⊽",barwed:"⌅",barwedge:"⌅",bbrk:"⎵",bbrktbrk:"⎶",bcong:"≌",bcy:"б",bdquo:"„",becaus:"∵",because:"∵",bemptyv:"⦰",bepsi:"϶",bernou:"ℬ",beta:"β",beth:"ℶ",between:"≬",bfr:"𝔟",bigcap:"⋂",bigcirc:"◯",bigcup:"⋃",bigodot:"⨀",bigoplus:"⨁",bigotimes:"⨂",bigsqcup:"⨆",bigstar:"★",bigtriangledown:"▽",bigtriangleup:"△",biguplus:"⨄",bigvee:"⋁",bigwedge:"⋀",bkarow:"⤍",blacklozenge:"⧫",blacksquare:"▪",blacktriangle:"▴",blacktriangledown:"▾",blacktriangleleft:"◂",blacktriangleright:"▸",blank:"␣",blk12:"▒",blk14:"░",blk34:"▓",block:"█",bne:"=⃥",bnequiv:"≡⃥",bnot:"⌐",bopf:"𝕓",bot:"⊥",bottom:"⊥",bowtie:"⋈",boxDL:"╗",boxDR:"╔",boxDl:"╖",boxDr:"╓",boxH:"═",boxHD:"╦",boxHU:"╩",boxHd:"╤",boxHu:"╧",boxUL:"╝",boxUR:"╚",boxUl:"╜",boxUr:"╙",boxV:"║",boxVH:"╬",boxVL:"╣",boxVR:"╠",boxVh:"╫",boxVl:"╢",boxVr:"╟",boxbox:"⧉",boxdL:"╕",boxdR:"╒",boxdl:"┐",boxdr:"┌",boxh:"─",boxhD:"╥",boxhU:"╨",boxhd:"┬",boxhu:"┴",boxminus:"⊟",boxplus:"⊞",boxtimes:"⊠",boxuL:"╛",boxuR:"╘",boxul:"┘",boxur:"└",boxv:"│",boxvH:"╪",boxvL:"╡",boxvR:"╞",boxvh:"┼",boxvl:"┤",boxvr:"├",bprime:"‵",breve:"˘",brvbar:"¦",bscr:"𝒷",bsemi:"⁏",bsim:"∽",bsime:"⋍",bsol:"\\",bsolb:"⧅",bsolhsub:"⟈",bull:"•",bullet:"•",bump:"≎",bumpE:"⪮",bumpe:"≏",bumpeq:"≏",cacute:"ć",cap:"∩",capand:"⩄",capbrcup:"⩉",capcap:"⩋",capcup:"⩇",capdot:"⩀",caps:"∩︀",caret:"⁁",caron:"ˇ",ccaps:"⩍",ccaron:"č",ccedil:"ç",ccirc:"ĉ",ccups:"⩌",ccupssm:"⩐",cdot:"ċ",cedil:"¸",cemptyv:"⦲",cent:"¢",centerdot:"·",cfr:"𝔠",chcy:"ч",check:"✓",checkmark:"✓",chi:"χ",cir:"○",cirE:"⧃",circ:"ˆ",circeq:"≗",circlearrowleft:"↺",circlearrowright:"↻",circledR:"®",circledS:"Ⓢ",circledast:"⊛",circledcirc:"⊚",circleddash:"⊝",cire:"≗",cirfnint:"⨐",cirmid:"⫯",cirscir:"⧂",clubs:"♣",clubsuit:"♣",colon:":",colone:"≔",coloneq:"≔",comma:",",commat:"@",comp:"∁",compfn:"∘",complement:"∁",complexes:"ℂ",cong:"≅",congdot:"⩭",conint:"∮",copf:"𝕔",coprod:"∐",copy:"©",copysr:"℗",crarr:"↵",cross:"✗",cscr:"𝒸",csub:"⫏",csube:"⫑",csup:"⫐",csupe:"⫒",ctdot:"⋯",cudarrl:"⤸",cudarrr:"⤵",cuepr:"⋞",cuesc:"⋟",cularr:"↶",cularrp:"⤽",cup:"∪",cupbrcap:"⩈",cupcap:"⩆",cupcup:"⩊",cupdot:"⊍",cupor:"⩅",cups:"∪︀",curarr:"↷",curarrm:"⤼",curlyeqprec:"⋞",curlyeqsucc:"⋟",curlyvee:"⋎",curlywedge:"⋏",curren:"¤",curvearrowleft:"↶",curvearrowright:"↷",cuvee:"⋎",cuwed:"⋏",cwconint:"∲",cwint:"∱",cylcty:"⌭",dArr:"⇓",dHar:"⥥",dagger:"†",daleth:"ℸ",darr:"↓",dash:"‐",dashv:"⊣",dbkarow:"⤏",dblac:"˝",dcaron:"ď",dcy:"д",dd:"ⅆ",ddagger:"‡",ddarr:"⇊",ddotseq:"⩷",deg:"°",delta:"δ",demptyv:"⦱",dfisht:"⥿",dfr:"𝔡",dharl:"⇃",dharr:"⇂",diam:"⋄",diamond:"⋄",diamondsuit:"♦",diams:"♦",die:"¨",digamma:"ϝ",disin:"⋲",div:"÷",divide:"÷",divideontimes:"⋇",divonx:"⋇",djcy:"ђ",dlcorn:"⌞",dlcrop:"⌍",dollar:"$",dopf:"𝕕",dot:"˙",doteq:"≐",doteqdot:"≑",dotminus:"∸",dotplus:"∔",dotsquare:"⊡",doublebarwedge:"⌆",downarrow:"↓",downdownarrows:"⇊",downharpoonleft:"⇃",downharpoonright:"⇂",drbkarow:"⤐",drcorn:"⌟",drcrop:"⌌",dscr:"𝒹",dscy:"ѕ",dsol:"⧶",dstrok:"đ",dtdot:"⋱",dtri:"▿",dtrif:"▾",duarr:"⇵",duhar:"⥯",dwangle:"⦦",dzcy:"џ",dzigrarr:"⟿",eDDot:"⩷",eDot:"≑",eacute:"é",easter:"⩮",ecaron:"ě",ecir:"≖",ecirc:"ê",ecolon:"≕",ecy:"э",edot:"ė",ee:"ⅇ",efDot:"≒",efr:"𝔢",eg:"⪚",egrave:"è",egs:"⪖",egsdot:"⪘",el:"⪙",elinters:"⏧",ell:"ℓ",els:"⪕",elsdot:"⪗",emacr:"ē",empty:"∅",emptyset:"∅",emptyv:"∅",emsp13:" ",emsp14:" ",emsp:" ",eng:"ŋ",ensp:" ",eogon:"ę",eopf:"𝕖",epar:"⋕",eparsl:"⧣",eplus:"⩱",epsi:"ε",epsilon:"ε",epsiv:"ϵ",eqcirc:"≖",eqcolon:"≕",eqsim:"≂",eqslantgtr:"⪖",eqslantless:"⪕",equals:"=",equest:"≟",equiv:"≡",equivDD:"⩸",eqvparsl:"⧥",erDot:"≓",erarr:"⥱",escr:"ℯ",esdot:"≐",esim:"≂",eta:"η",eth:"ð",euml:"ë",euro:"€",excl:"!",exist:"∃",expectation:"ℰ",exponentiale:"ⅇ",fallingdotseq:"≒",fcy:"ф",female:"♀",ffilig:"ﬃ",fflig:"ﬀ",ffllig:"ﬄ",ffr:"𝔣",filig:"ﬁ",fjlig:"fj",flat:"♭",fllig:"ﬂ",fltns:"▱",fnof:"ƒ",fopf:"𝕗",forall:"∀",fork:"⋔",forkv:"⫙",fpartint:"⨍",frac12:"½",frac13:"⅓",frac14:"¼",frac15:"⅕",frac16:"⅙",frac18:"⅛",frac23:"⅔",frac25:"⅖",frac34:"¾",frac35:"⅗",frac38:"⅜",frac45:"⅘",frac56:"⅚",frac58:"⅝",frac78:"⅞",frasl:"⁄",frown:"⌢",fscr:"𝒻",gE:"≧",gEl:"⪌",gacute:"ǵ",gamma:"γ",gammad:"ϝ",gap:"⪆",gbreve:"ğ",gcirc:"ĝ",gcy:"г",gdot:"ġ",ge:"≥",gel:"⋛",geq:"≥",geqq:"≧",geqslant:"⩾",ges:"⩾",gescc:"⪩",gesdot:"⪀",gesdoto:"⪂",gesdotol:"⪄",gesl:"⋛︀",gesles:"⪔",gfr:"𝔤",gg:"≫",ggg:"⋙",gimel:"ℷ",gjcy:"ѓ",gl:"≷",glE:"⪒",gla:"⪥",glj:"⪤",gnE:"≩",gnap:"⪊",gnapprox:"⪊",gne:"⪈",gneq:"⪈",gneqq:"≩",gnsim:"⋧",gopf:"𝕘",grave:"`",gscr:"ℊ",gsim:"≳",gsime:"⪎",gsiml:"⪐",gt:">",gtcc:"⪧",gtcir:"⩺",gtdot:"⋗",gtlPar:"⦕",gtquest:"⩼",gtrapprox:"⪆",gtrarr:"⥸",gtrdot:"⋗",gtreqless:"⋛",gtreqqless:"⪌",gtrless:"≷",gtrsim:"≳",gvertneqq:"≩︀",gvnE:"≩︀",hArr:"⇔",hairsp:" ",half:"½",hamilt:"ℋ",hardcy:"ъ",harr:"↔",harrcir:"⥈",harrw:"↭",hbar:"ℏ",hcirc:"ĥ",hearts:"♥",heartsuit:"♥",hellip:"…",hercon:"⊹",hfr:"𝔥",hksearow:"⤥",hkswarow:"⤦",hoarr:"⇿",homtht:"∻",hookleftarrow:"↩",hookrightarrow:"↪",hopf:"𝕙",horbar:"―",hscr:"𝒽",hslash:"ℏ",hstrok:"ħ",hybull:"⁃",hyphen:"‐",iacute:"í",ic:"⁣",icirc:"î",icy:"и",iecy:"е",iexcl:"¡",iff:"⇔",ifr:"𝔦",igrave:"ì",ii:"ⅈ",iiiint:"⨌",iiint:"∭",iinfin:"⧜",iiota:"℩",ijlig:"ĳ",imacr:"ī",image:"ℑ",imagline:"ℐ",imagpart:"ℑ",imath:"ı",imof:"⊷",imped:"Ƶ",in:"∈",incare:"℅",infin:"∞",infintie:"⧝",inodot:"ı",int:"∫",intcal:"⊺",integers:"ℤ",intercal:"⊺",intlarhk:"⨗",intprod:"⨼",iocy:"ё",iogon:"į",iopf:"𝕚",iota:"ι",iprod:"⨼",iquest:"¿",iscr:"𝒾",isin:"∈",isinE:"⋹",isindot:"⋵",isins:"⋴",isinsv:"⋳",isinv:"∈",it:"⁢",itilde:"ĩ",iukcy:"і",iuml:"ï",jcirc:"ĵ",jcy:"й",jfr:"𝔧",jmath:"ȷ",jopf:"𝕛",jscr:"𝒿",jsercy:"ј",jukcy:"є",kappa:"κ",kappav:"ϰ",kcedil:"ķ",kcy:"к",kfr:"𝔨",kgreen:"ĸ",khcy:"х",kjcy:"ќ",kopf:"𝕜",kscr:"𝓀",lAarr:"⇚",lArr:"⇐",lAtail:"⤛",lBarr:"⤎",lE:"≦",lEg:"⪋",lHar:"⥢",lacute:"ĺ",laemptyv:"⦴",lagran:"ℒ",lambda:"λ",lang:"⟨",langd:"⦑",langle:"⟨",lap:"⪅",laquo:"«",larr:"←",larrb:"⇤",larrbfs:"⤟",larrfs:"⤝",larrhk:"↩",larrlp:"↫",larrpl:"⤹",larrsim:"⥳",larrtl:"↢",lat:"⪫",latail:"⤙",late:"⪭",lates:"⪭︀",lbarr:"⤌",lbbrk:"❲",lbrace:"{",lbrack:"[",lbrke:"⦋",lbrksld:"⦏",lbrkslu:"⦍",lcaron:"ľ",lcedil:"ļ",lceil:"⌈",lcub:"{",lcy:"л",ldca:"⤶",ldquo:"“",ldquor:"„",ldrdhar:"⥧",ldrushar:"⥋",ldsh:"↲",le:"≤",leftarrow:"←",leftarrowtail:"↢",leftharpoondown:"↽",leftharpoonup:"↼",leftleftarrows:"⇇",leftrightarrow:"↔",leftrightarrows:"⇆",leftrightharpoons:"⇋",leftrightsquigarrow:"↭",leftthreetimes:"⋋",leg:"⋚",leq:"≤",leqq:"≦",leqslant:"⩽",les:"⩽",lescc:"⪨",lesdot:"⩿",lesdoto:"⪁",lesdotor:"⪃",lesg:"⋚︀",lesges:"⪓",lessapprox:"⪅",lessdot:"⋖",lesseqgtr:"⋚",lesseqqgtr:"⪋",lessgtr:"≶",lesssim:"≲",lfisht:"⥼",lfloor:"⌊",lfr:"𝔩",lg:"≶",lgE:"⪑",lhard:"↽",lharu:"↼",lharul:"⥪",lhblk:"▄",ljcy:"љ",ll:"≪",llarr:"⇇",llcorner:"⌞",llhard:"⥫",lltri:"◺",lmidot:"ŀ",lmoust:"⎰",lmoustache:"⎰",lnE:"≨",lnap:"⪉",lnapprox:"⪉",lne:"⪇",lneq:"⪇",lneqq:"≨",lnsim:"⋦",loang:"⟬",loarr:"⇽",lobrk:"⟦",longleftarrow:"⟵",longleftrightarrow:"⟷",longmapsto:"⟼",longrightarrow:"⟶",looparrowleft:"↫",looparrowright:"↬",lopar:"⦅",lopf:"𝕝",loplus:"⨭",lotimes:"⨴",lowast:"∗",lowbar:"_",loz:"◊",lozenge:"◊",lozf:"⧫",lpar:"(",lparlt:"⦓",lrarr:"⇆",lrcorner:"⌟",lrhar:"⇋",lrhard:"⥭",lrm:"‎",lrtri:"⊿",lsaquo:"‹",lscr:"𝓁",lsh:"↰",lsim:"≲",lsime:"⪍",lsimg:"⪏",lsqb:"[",lsquo:"‘",lsquor:"‚",lstrok:"ł",lt:"<",ltcc:"⪦",ltcir:"⩹",ltdot:"⋖",lthree:"⋋",ltimes:"⋉",ltlarr:"⥶",ltquest:"⩻",ltrPar:"⦖",ltri:"◃",ltrie:"⊴",ltrif:"◂",lurdshar:"⥊",luruhar:"⥦",lvertneqq:"≨︀",lvnE:"≨︀",mDDot:"∺",macr:"¯",male:"♂",malt:"✠",maltese:"✠",map:"↦",mapsto:"↦",mapstodown:"↧",mapstoleft:"↤",mapstoup:"↥",marker:"▮",mcomma:"⨩",mcy:"м",mdash:"—",measuredangle:"∡",mfr:"𝔪",mho:"℧",micro:"µ",mid:"∣",midast:"*",midcir:"⫰",middot:"·",minus:"−",minusb:"⊟",minusd:"∸",minusdu:"⨪",mlcp:"⫛",mldr:"…",mnplus:"∓",models:"⊧",mopf:"𝕞",mp:"∓",mscr:"𝓂",mstpos:"∾",mu:"μ",multimap:"⊸",mumap:"⊸",nGg:"⋙̸",nGt:"≫⃒",nGtv:"≫̸",nLeftarrow:"⇍",nLeftrightarrow:"⇎",nLl:"⋘̸",nLt:"≪⃒",nLtv:"≪̸",nRightarrow:"⇏",nVDash:"⊯",nVdash:"⊮",nabla:"∇",nacute:"ń",nang:"∠⃒",nap:"≉",napE:"⩰̸",napid:"≋̸",napos:"ŉ",napprox:"≉",natur:"♮",natural:"♮",naturals:"ℕ",nbsp:" ",nbump:"≎̸",nbumpe:"≏̸",ncap:"⩃",ncaron:"ň",ncedil:"ņ",ncong:"≇",ncongdot:"⩭̸",ncup:"⩂",ncy:"н",ndash:"–",ne:"≠",neArr:"⇗",nearhk:"⤤",nearr:"↗",nearrow:"↗",nedot:"≐̸",nequiv:"≢",nesear:"⤨",nesim:"≂̸",nexist:"∄",nexists:"∄",nfr:"𝔫",ngE:"≧̸",nge:"≱",ngeq:"≱",ngeqq:"≧̸",ngeqslant:"⩾̸",nges:"⩾̸",ngsim:"≵",ngt:"≯",ngtr:"≯",nhArr:"⇎",nharr:"↮",nhpar:"⫲",ni:"∋",nis:"⋼",nisd:"⋺",niv:"∋",njcy:"њ",nlArr:"⇍",nlE:"≦̸",nlarr:"↚",nldr:"‥",nle:"≰",nleftarrow:"↚",nleftrightarrow:"↮",nleq:"≰",nleqq:"≦̸",nleqslant:"⩽̸",nles:"⩽̸",nless:"≮",nlsim:"≴",nlt:"≮",nltri:"⋪",nltrie:"⋬",nmid:"∤",nopf:"𝕟",not:"¬",notin:"∉",notinE:"⋹̸",notindot:"⋵̸",notinva:"∉",notinvb:"⋷",notinvc:"⋶",notni:"∌",notniva:"∌",notnivb:"⋾",notnivc:"⋽",npar:"∦",nparallel:"∦",nparsl:"⫽⃥",npart:"∂̸",npolint:"⨔",npr:"⊀",nprcue:"⋠",npre:"⪯̸",nprec:"⊀",npreceq:"⪯̸",nrArr:"⇏",nrarr:"↛",nrarrc:"⤳̸",nrarrw:"↝̸",nrightarrow:"↛",nrtri:"⋫",nrtrie:"⋭",nsc:"⊁",nsccue:"⋡",nsce:"⪰̸",nscr:"𝓃",nshortmid:"∤",nshortparallel:"∦",nsim:"≁",nsime:"≄",nsimeq:"≄",nsmid:"∤",nspar:"∦",nsqsube:"⋢",nsqsupe:"⋣",nsub:"⊄",nsubE:"⫅̸",nsube:"⊈",nsubset:"⊂⃒",nsubseteq:"⊈",nsubseteqq:"⫅̸",nsucc:"⊁",nsucceq:"⪰̸",nsup:"⊅",nsupE:"⫆̸",nsupe:"⊉",nsupset:"⊃⃒",nsupseteq:"⊉",nsupseteqq:"⫆̸",ntgl:"≹",ntilde:"ñ",ntlg:"≸",ntriangleleft:"⋪",ntrianglelefteq:"⋬",ntriangleright:"⋫",ntrianglerighteq:"⋭",nu:"ν",num:"#",numero:"№",numsp:" ",nvDash:"⊭",nvHarr:"⤄",nvap:"≍⃒",nvdash:"⊬",nvge:"≥⃒",nvgt:">⃒",nvinfin:"⧞",nvlArr:"⤂",nvle:"≤⃒",nvlt:"<⃒",nvltrie:"⊴⃒",nvrArr:"⤃",nvrtrie:"⊵⃒",nvsim:"∼⃒",nwArr:"⇖",nwarhk:"⤣",nwarr:"↖",nwarrow:"↖",nwnear:"⤧",oS:"Ⓢ",oacute:"ó",oast:"⊛",ocir:"⊚",ocirc:"ô",ocy:"о",odash:"⊝",odblac:"ő",odiv:"⨸",odot:"⊙",odsold:"⦼",oelig:"œ",ofcir:"⦿",ofr:"𝔬",ogon:"˛",ograve:"ò",ogt:"⧁",ohbar:"⦵",ohm:"Ω",oint:"∮",olarr:"↺",olcir:"⦾",olcross:"⦻",oline:"‾",olt:"⧀",omacr:"ō",omega:"ω",omicron:"ο",omid:"⦶",ominus:"⊖",oopf:"𝕠",opar:"⦷",operp:"⦹",oplus:"⊕",or:"∨",orarr:"↻",ord:"⩝",order:"ℴ",orderof:"ℴ",ordf:"ª",ordm:"º",origof:"⊶",oror:"⩖",orslope:"⩗",orv:"⩛",oscr:"ℴ",oslash:"ø",osol:"⊘",otilde:"õ",otimes:"⊗",otimesas:"⨶",ouml:"ö",ovbar:"⌽",par:"∥",para:"¶",parallel:"∥",parsim:"⫳",parsl:"⫽",part:"∂",pcy:"п",percnt:"%",period:".",permil:"‰",perp:"⊥",pertenk:"‱",pfr:"𝔭",phi:"φ",phiv:"ϕ",phmmat:"ℳ",phone:"☎",pi:"π",pitchfork:"⋔",piv:"ϖ",planck:"ℏ",planckh:"ℎ",plankv:"ℏ",plus:"+",plusacir:"⨣",plusb:"⊞",pluscir:"⨢",plusdo:"∔",plusdu:"⨥",pluse:"⩲",plusmn:"±",plussim:"⨦",plustwo:"⨧",pm:"±",pointint:"⨕",popf:"𝕡",pound:"£",pr:"≺",prE:"⪳",prap:"⪷",prcue:"≼",pre:"⪯",prec:"≺",precapprox:"⪷",preccurlyeq:"≼",preceq:"⪯",precnapprox:"⪹",precneqq:"⪵",precnsim:"⋨",precsim:"≾",prime:"′",primes:"ℙ",prnE:"⪵",prnap:"⪹",prnsim:"⋨",prod:"∏",profalar:"⌮",profline:"⌒",profsurf:"⌓",prop:"∝",propto:"∝",prsim:"≾",prurel:"⊰",pscr:"𝓅",psi:"ψ",puncsp:" ",qfr:"𝔮",qint:"⨌",qopf:"𝕢",qprime:"⁗",qscr:"𝓆",quaternions:"ℍ",quatint:"⨖",quest:"?",questeq:"≟",quot:'"',rAarr:"⇛",rArr:"⇒",rAtail:"⤜",rBarr:"⤏",rHar:"⥤",race:"∽̱",racute:"ŕ",radic:"√",raemptyv:"⦳",rang:"⟩",rangd:"⦒",range:"⦥",rangle:"⟩",raquo:"»",rarr:"→",rarrap:"⥵",rarrb:"⇥",rarrbfs:"⤠",rarrc:"⤳",rarrfs:"⤞",rarrhk:"↪",rarrlp:"↬",rarrpl:"⥅",rarrsim:"⥴",rarrtl:"↣",rarrw:"↝",ratail:"⤚",ratio:"∶",rationals:"ℚ",rbarr:"⤍",rbbrk:"❳",rbrace:"}",rbrack:"]",rbrke:"⦌",rbrksld:"⦎",rbrkslu:"⦐",rcaron:"ř",rcedil:"ŗ",rceil:"⌉",rcub:"}",rcy:"р",rdca:"⤷",rdldhar:"⥩",rdquo:"”",rdquor:"”",rdsh:"↳",real:"ℜ",realine:"ℛ",realpart:"ℜ",reals:"ℝ",rect:"▭",reg:"®",rfisht:"⥽",rfloor:"⌋",rfr:"𝔯",rhard:"⇁",rharu:"⇀",rharul:"⥬",rho:"ρ",rhov:"ϱ",rightarrow:"→",rightarrowtail:"↣",rightharpoondown:"⇁",rightharpoonup:"⇀",rightleftarrows:"⇄",rightleftharpoons:"⇌",rightrightarrows:"⇉",rightsquigarrow:"↝",rightthreetimes:"⋌",ring:"˚",risingdotseq:"≓",rlarr:"⇄",rlhar:"⇌",rlm:"‏",rmoust:"⎱",rmoustache:"⎱",rnmid:"⫮",roang:"⟭",roarr:"⇾",robrk:"⟧",ropar:"⦆",ropf:"𝕣",roplus:"⨮",rotimes:"⨵",rpar:")",rpargt:"⦔",rppolint:"⨒",rrarr:"⇉",rsaquo:"›",rscr:"𝓇",rsh:"↱",rsqb:"]",rsquo:"’",rsquor:"’",rthree:"⋌",rtimes:"⋊",rtri:"▹",rtrie:"⊵",rtrif:"▸",rtriltri:"⧎",ruluhar:"⥨",rx:"℞",sacute:"ś",sbquo:"‚",sc:"≻",scE:"⪴",scap:"⪸",scaron:"š",sccue:"≽",sce:"⪰",scedil:"ş",scirc:"ŝ",scnE:"⪶",scnap:"⪺",scnsim:"⋩",scpolint:"⨓",scsim:"≿",scy:"с",sdot:"⋅",sdotb:"⊡",sdote:"⩦",seArr:"⇘",searhk:"⤥",searr:"↘",searrow:"↘",sect:"§",semi:";",seswar:"⤩",setminus:"∖",setmn:"∖",sext:"✶",sfr:"𝔰",sfrown:"⌢",sharp:"♯",shchcy:"щ",shcy:"ш",shortmid:"∣",shortparallel:"∥",shy:"­",sigma:"σ",sigmaf:"ς",sigmav:"ς",sim:"∼",simdot:"⩪",sime:"≃",simeq:"≃",simg:"⪞",simgE:"⪠",siml:"⪝",simlE:"⪟",simne:"≆",simplus:"⨤",simrarr:"⥲",slarr:"←",smallsetminus:"∖",smashp:"⨳",smeparsl:"⧤",smid:"∣",smile:"⌣",smt:"⪪",smte:"⪬",smtes:"⪬︀",softcy:"ь",sol:"/",solb:"⧄",solbar:"⌿",sopf:"𝕤",spades:"♠",spadesuit:"♠",spar:"∥",sqcap:"⊓",sqcaps:"⊓︀",sqcup:"⊔",sqcups:"⊔︀",sqsub:"⊏",sqsube:"⊑",sqsubset:"⊏",sqsubseteq:"⊑",sqsup:"⊐",sqsupe:"⊒",sqsupset:"⊐",sqsupseteq:"⊒",squ:"□",square:"□",squarf:"▪",squf:"▪",srarr:"→",sscr:"𝓈",ssetmn:"∖",ssmile:"⌣",sstarf:"⋆",star:"☆",starf:"★",straightepsilon:"ϵ",straightphi:"ϕ",strns:"¯",sub:"⊂",subE:"⫅",subdot:"⪽",sube:"⊆",subedot:"⫃",submult:"⫁",subnE:"⫋",subne:"⊊",subplus:"⪿",subrarr:"⥹",subset:"⊂",subseteq:"⊆",subseteqq:"⫅",subsetneq:"⊊",subsetneqq:"⫋",subsim:"⫇",subsub:"⫕",subsup:"⫓",succ:"≻",succapprox:"⪸",succcurlyeq:"≽",succeq:"⪰",succnapprox:"⪺",succneqq:"⪶",succnsim:"⋩",succsim:"≿",sum:"∑",sung:"♪",sup1:"¹",sup2:"²",sup3:"³",sup:"⊃",supE:"⫆",supdot:"⪾",supdsub:"⫘",supe:"⊇",supedot:"⫄",suphsol:"⟉",suphsub:"⫗",suplarr:"⥻",supmult:"⫂",supnE:"⫌",supne:"⊋",supplus:"⫀",supset:"⊃",supseteq:"⊇",supseteqq:"⫆",supsetneq:"⊋",supsetneqq:"⫌",supsim:"⫈",supsub:"⫔",supsup:"⫖",swArr:"⇙",swarhk:"⤦",swarr:"↙",swarrow:"↙",swnwar:"⤪",szlig:"ß",target:"⌖",tau:"τ",tbrk:"⎴",tcaron:"ť",tcedil:"ţ",tcy:"т",tdot:"⃛",telrec:"⌕",tfr:"𝔱",there4:"∴",therefore:"∴",theta:"θ",thetasym:"ϑ",thetav:"ϑ",thickapprox:"≈",thicksim:"∼",thinsp:" ",thkap:"≈",thksim:"∼",thorn:"þ",tilde:"˜",times:"×",timesb:"⊠",timesbar:"⨱",timesd:"⨰",tint:"∭",toea:"⤨",top:"⊤",topbot:"⌶",topcir:"⫱",topf:"𝕥",topfork:"⫚",tosa:"⤩",tprime:"‴",trade:"™",triangle:"▵",triangledown:"▿",triangleleft:"◃",trianglelefteq:"⊴",triangleq:"≜",triangleright:"▹",trianglerighteq:"⊵",tridot:"◬",trie:"≜",triminus:"⨺",triplus:"⨹",trisb:"⧍",tritime:"⨻",trpezium:"⏢",tscr:"𝓉",tscy:"ц",tshcy:"ћ",tstrok:"ŧ",twixt:"≬",twoheadleftarrow:"↞",twoheadrightarrow:"↠",uArr:"⇑",uHar:"⥣",uacute:"ú",uarr:"↑",ubrcy:"ў",ubreve:"ŭ",ucirc:"û",ucy:"у",udarr:"⇅",udblac:"ű",udhar:"⥮",ufisht:"⥾",ufr:"𝔲",ugrave:"ù",uharl:"↿",uharr:"↾",uhblk:"▀",ulcorn:"⌜",ulcorner:"⌜",ulcrop:"⌏",ultri:"◸",umacr:"ū",uml:"¨",uogon:"ų",uopf:"𝕦",uparrow:"↑",updownarrow:"↕",upharpoonleft:"↿",upharpoonright:"↾",uplus:"⊎",upsi:"υ",upsih:"ϒ",upsilon:"υ",upuparrows:"⇈",urcorn:"⌝",urcorner:"⌝",urcrop:"⌎",uring:"ů",urtri:"◹",uscr:"𝓊",utdot:"⋰",utilde:"ũ",utri:"▵",utrif:"▴",uuarr:"⇈",uuml:"ü",uwangle:"⦧",vArr:"⇕",vBar:"⫨",vBarv:"⫩",vDash:"⊨",vangrt:"⦜",varepsilon:"ϵ",varkappa:"ϰ",varnothing:"∅",varphi:"ϕ",varpi:"ϖ",varpropto:"∝",varr:"↕",varrho:"ϱ",varsigma:"ς",varsubsetneq:"⊊︀",varsubsetneqq:"⫋︀",varsupsetneq:"⊋︀",varsupsetneqq:"⫌︀",vartheta:"ϑ",vartriangleleft:"⊲",vartriangleright:"⊳",vcy:"в",vdash:"⊢",vee:"∨",veebar:"⊻",veeeq:"≚",vellip:"⋮",verbar:"|",vert:"|",vfr:"𝔳",vltri:"⊲",vnsub:"⊂⃒",vnsup:"⊃⃒",vopf:"𝕧",vprop:"∝",vrtri:"⊳",vscr:"𝓋",vsubnE:"⫋︀",vsubne:"⊊︀",vsupnE:"⫌︀",vsupne:"⊋︀",vzigzag:"⦚",wcirc:"ŵ",wedbar:"⩟",wedge:"∧",wedgeq:"≙",weierp:"℘",wfr:"𝔴",wopf:"𝕨",wp:"℘",wr:"≀",wreath:"≀",wscr:"𝓌",xcap:"⋂",xcirc:"◯",xcup:"⋃",xdtri:"▽",xfr:"𝔵",xhArr:"⟺",xharr:"⟷",xi:"ξ",xlArr:"⟸",xlarr:"⟵",xmap:"⟼",xnis:"⋻",xodot:"⨀",xopf:"𝕩",xoplus:"⨁",xotime:"⨂",xrArr:"⟹",xrarr:"⟶",xscr:"𝓍",xsqcup:"⨆",xuplus:"⨄",xutri:"△",xvee:"⋁",xwedge:"⋀",yacute:"ý",yacy:"я",ycirc:"ŷ",ycy:"ы",yen:"¥",yfr:"𝔶",yicy:"ї",yopf:"𝕪",yscr:"𝓎",yucy:"ю",yuml:"ÿ",zacute:"ź",zcaron:"ž",zcy:"з",zdot:"ż",zeetrf:"ℨ",zeta:"ζ",zfr:"𝔷",zhcy:"ж",zigrarr:"⇝",zopf:"𝕫",zscr:"𝓏",zwj:"‍",zwnj:"‌"};const V={}.hasOwnProperty;function decodeNamedCharacterReference(e){return V.call(U,e)?U[e]:false}function decodeNumericCharacterReference(e,t){const n=Number.parseInt(e,t);if(n<9||n===11||n>13&&n<32||n>126&&n<160||n>55295&&n<57344||n>64975&&n<65008||(n&65535)===65535||(n&65535)===65534||n>1114111){return"�"}return String.fromCharCode(n)}const j=/\\([!-/:-@[-`{-~])|&(#(?:\d{1,7}|x[\da-f]{1,6})|[\da-z]{1,31});/gi;function decodeString(e){return e.replace(j,decode)}function decode(e,t,n){if(t){return t}const r=n.charCodeAt(0);if(r===35){const e=n.charCodeAt(1);const t=e===120||e===88;return decodeNumericCharacterReference(n.slice(t?2:1),t?16:10)}return decodeNamedCharacterReference(n)||e}function association(e){if(e.label||!e.identifier){return e.label||""}return decodeString(e.identifier)}function containerFlow(e,t,n){const r=t.indexStack;const i=e.children||[];const o=t.createTracker(n);const a=[];let l=-1;r.push(-1);while(++l<i.length){const n=i[l];r[r.length-1]=l;a.push(o.move(t.handle(n,e,t,{before:"\n",after:"\n",...o.current()})));if(n.type!=="list"){t.bulletLastUsed=undefined}if(l<i.length-1){a.push(o.move(between(n,i[l+1],e,t)))}}r.pop();return a.join("")}function between(e,t,n,r){let i=r.join.length;while(i--){const o=r.join[i](e,t,n,r);if(o===true||o===1){break}if(typeof o==="number"){return"\n".repeat(1+o)}if(o===false){return"\n\n\x3c!----\x3e\n\n"}}return"\n\n"}const G=/\r?\n|\r/g;function indentLines(e,t){const n=[];let r=0;let i=0;let o;while(o=G.exec(e)){one(e.slice(r,o.index));n.push(o[0]);r=o.index+o[0].length;i++}one(e.slice(r));return n.join("");function one(e){n.push(t(e,i,!e))}}function patternCompile(e){if(!e._compiled){const t=(e.atBreak?"[\\r\\n][\\t ]*":"")+(e.before?"(?:"+e.before+")":"");e._compiled=new RegExp((t?"("+t+")":"")+(/[|\\{}()[\]^$+*?.-]/.test(e.character)?"\\":"")+e.character+(e.after?"(?:"+e.after+")":""),"g")}return e._compiled}function patternInScope(e,t){return listInScope(e,t.inConstruct,true)&&!listInScope(e,t.notInConstruct,false)}function listInScope(e,t,n){if(typeof t==="string"){t=[t]}if(!t||t.length===0){return n}let r=-1;while(++r<t.length){if(e.includes(t[r])){return true}}return false}function safe(e,t,n){const r=(n.before||"")+(t||"")+(n.after||"");const i=[];const o=[];const a={};let l=-1;while(++l<e.unsafe.length){const t=e.unsafe[l];if(!patternInScope(e.stack,t)){continue}const n=patternCompile(t);let o;while(o=n.exec(r)){const e="before"in t||Boolean(t.atBreak);const n="after"in t;const r=o.index+(e?o[1].length:0);if(i.includes(r)){if(a[r].before&&!e){a[r].before=false}if(a[r].after&&!n){a[r].after=false}}else{i.push(r);a[r]={before:e,after:n}}}}i.sort(numerical);let c=n.before?n.before.length:0;const u=r.length-(n.after?n.after.length:0);l=-1;while(++l<i.length){const e=i[l];if(e<c||e>=u){continue}if(e+1<u&&i[l+1]===e+1&&a[e].after&&!a[e+1].before&&!a[e+1].after||i[l-1]===e-1&&a[e].before&&!a[e-1].before&&!a[e-1].after){continue}if(c!==e){o.push(escapeBackslashes(r.slice(c,e),"\\"))}c=e;if(/[!-/:-@[-`{-~]/.test(r.charAt(e))&&(!n.encode||!n.encode.includes(r.charAt(e)))){o.push("\\")}else{o.push("&#x"+r.charCodeAt(e).toString(16).toUpperCase()+";");c++}}o.push(escapeBackslashes(r.slice(c,u),n.after));return o.join("")}function numerical(e,t){return e-t}function escapeBackslashes(e,t){const n=/\\(?=[!-/:-@[-`{-~])/g;const r=[];const i=[];const o=e+t;let a=-1;let l=0;let c;while(c=n.exec(o)){r.push(c.index)}while(++a<r.length){if(l!==r[a]){i.push(e.slice(l,r[a]))}i.push("\\");l=r[a]}i.push(e.slice(l));return i.join("")}function track(e){const t=e||{};const n=t.now||{};let r=t.lineShift||0;let i=n.line||1;let o=n.column||1;return{move:move,current:current,shift:shift};function current(){return{now:{line:i,column:o},lineShift:r}}function shift(e){r+=e}function move(e){const t=e||"";const n=t.split(/\r?\n|\r/g);const a=n[n.length-1];i+=n.length-1;o=n.length===1?o+a.length:1+a.length+r;return t}}function gfmFootnoteFromMarkdown(){return{enter:{gfmFootnoteDefinition:enterFootnoteDefinition,gfmFootnoteDefinitionLabelString:enterFootnoteDefinitionLabelString,gfmFootnoteCall:enterFootnoteCall,gfmFootnoteCallString:enterFootnoteCallString},exit:{gfmFootnoteDefinition:exitFootnoteDefinition,gfmFootnoteDefinitionLabelString:exitFootnoteDefinitionLabelString,gfmFootnoteCall:exitFootnoteCall,gfmFootnoteCallString:exitFootnoteCallString}};function enterFootnoteDefinition(e){this.enter({type:"footnoteDefinition",identifier:"",label:"",children:[]},e)}function enterFootnoteDefinitionLabelString(){this.buffer()}function exitFootnoteDefinitionLabelString(e){const t=this.resume();const n=this.stack[this.stack.length-1];n.label=t;n.identifier=normalizeIdentifier(this.sliceSerialize(e)).toLowerCase()}function exitFootnoteDefinition(e){this.exit(e)}function enterFootnoteCall(e){this.enter({type:"footnoteReference",identifier:"",label:""},e)}function enterFootnoteCallString(){this.buffer()}function exitFootnoteCallString(e){const t=this.resume();const n=this.stack[this.stack.length-1];n.label=t;n.identifier=normalizeIdentifier(this.sliceSerialize(e)).toLowerCase()}function exitFootnoteCall(e){this.exit(e)}}function gfmFootnoteToMarkdown(){footnoteReference.peek=footnoteReferencePeek;return{unsafe:[{character:"[",inConstruct:["phrasing","label","reference"]}],handlers:{footnoteDefinition:footnoteDefinition,footnoteReference:footnoteReference}};function footnoteReference(e,t,n,r){const i=track(r);let o=i.move("[^");const a=n.enter("footnoteReference");const l=n.enter("reference");o+=i.move(safe(n,association(e),{...i.current(),before:o,after:"]"}));l();a();o+=i.move("]");return o}function footnoteReferencePeek(){return"["}function footnoteDefinition(e,t,n,r){const i=track(r);let o=i.move("[^");const a=n.enter("footnoteDefinition");const l=n.enter("label");o+=i.move(safe(n,association(e),{...i.current(),before:o,after:"]"}));l();o+=i.move("]:"+(e.children&&e.children.length>0?" ":""));i.shift(4);o+=i.move(indentLines(containerFlow(e,n,i.current()),map));a();return o;function map(e,t,n){if(t){return(n?"":"    ")+e}return e}}}function containerPhrasing(e,t,n){const r=t.indexStack;const i=e.children||[];const o=[];let a=-1;let l=n.before;r.push(-1);let c=t.createTracker(n);while(++a<i.length){const u=i[a];let f;r[r.length-1]=a;if(a+1<i.length){let n=t.handle.handlers[i[a+1].type];if(n&&n.peek)n=n.peek;f=n?n(i[a+1],e,t,{before:"",after:"",...c.current()}).charAt(0):""}else{f=n.after}if(o.length>0&&(l==="\r"||l==="\n")&&u.type==="html"){o[o.length-1]=o[o.length-1].replace(/(\r?\n|\r)$/," ");l=" ";c=t.createTracker(n);c.move(o.join(""))}o.push(c.move(t.handle(u,e,t,{...c.current(),before:l,after:f})));l=o[o.length-1].slice(-1)}r.pop();return o.join("")}const M={canContainEols:["delete"],enter:{strikethrough:enterStrikethrough},exit:{strikethrough:exitStrikethrough}};const W=["autolink","destinationLiteral","destinationRaw","reference","titleQuote","titleApostrophe"];const _={unsafe:[{character:"~",inConstruct:"phrasing",notInConstruct:W}],handlers:{delete:handleDelete}};handleDelete.peek=peekDelete;function enterStrikethrough(e){this.enter({type:"delete",children:[]},e)}function exitStrikethrough(e){this.exit(e)}function handleDelete(e,t,n,r){const i=track(r);const o=n.enter("emphasis");let a=i.move("~~");a+=containerPhrasing(e,n,{...i.current(),before:a,after:"~"});a+=i.move("~~");o();return a}function peekDelete(){return"~"}inlineCode.peek=inlineCodePeek;function inlineCode(e,t,n){let r=e.value||"";let i="`";let o=-1;while(new RegExp("(^|[^`])"+i+"([^`]|$)").test(r)){i+="`"}if(/[^ \r\n]/.test(r)&&(/^[ \r\n]/.test(r)&&/[ \r\n]$/.test(r)||/^`|`$/.test(r))){r=" "+r+" "}while(++o<n.unsafe.length){const e=n.unsafe[o];const t=patternCompile(e);let i;if(!e.atBreak)continue;while(i=t.exec(r)){let e=i.index;if(r.charCodeAt(e)===10&&r.charCodeAt(e-1)===13){e--}r=r.slice(0,e)+" "+r.slice(i.index+1)}}return i+r+i}function inlineCodePeek(){return"`"}function markdownTable(e,t={}){const n=(t.align||[]).concat();const r=t.stringLength||defaultStringLength;const i=[];const o=[];const a=[];const l=[];let c=0;let u=-1;while(++u<e.length){const n=[];const i=[];let f=-1;if(e[u].length>c){c=e[u].length}while(++f<e[u].length){const o=serialize(e[u][f]);if(t.alignDelimiters!==false){const e=r(o);i[f]=e;if(l[f]===undefined||e>l[f]){l[f]=e}}n.push(o)}o[u]=n;a[u]=i}let f=-1;if(typeof n==="object"&&"length"in n){while(++f<c){i[f]=toAlignment(n[f])}}else{const e=toAlignment(n);while(++f<c){i[f]=e}}f=-1;const d=[];const h=[];while(++f<c){const e=i[f];let n="";let r="";if(e===99){n=":";r=":"}else if(e===108){n=":"}else if(e===114){r=":"}let o=t.alignDelimiters===false?1:Math.max(1,l[f]-n.length-r.length);const a=n+"-".repeat(o)+r;if(t.alignDelimiters!==false){o=n.length+o+r.length;if(o>l[f]){l[f]=o}h[f]=o}d[f]=a}o.splice(1,0,d);a.splice(1,0,h);u=-1;const g=[];while(++u<o.length){const e=o[u];const n=a[u];f=-1;const r=[];while(++f<c){const o=e[f]||"";let a="";let u="";if(t.alignDelimiters!==false){const e=l[f]-(n[f]||0);const t=i[f];if(t===114){a=" ".repeat(e)}else if(t===99){if(e%2){a=" ".repeat(e/2+.5);u=" ".repeat(e/2-.5)}else{a=" ".repeat(e/2);u=a}}else{u=" ".repeat(e)}}if(t.delimiterStart!==false&&!f){r.push("|")}if(t.padding!==false&&!(t.alignDelimiters===false&&o==="")&&(t.delimiterStart!==false||f)){r.push(" ")}if(t.alignDelimiters!==false){r.push(a)}r.push(o);if(t.alignDelimiters!==false){r.push(u)}if(t.padding!==false){r.push(" ")}if(t.delimiterEnd!==false||f!==c-1){r.push("|")}}g.push(t.delimiterEnd===false?r.join("").replace(/ +$/,""):r.join(""))}return g.join("\n")}function serialize(e){return e===null||e===undefined?"":String(e)}function defaultStringLength(e){return e.length}function toAlignment(e){const t=typeof e==="string"?e.codePointAt(0):0;return t===67||t===99?99:t===76||t===108?108:t===82||t===114?114:0}const Z={enter:{table:enterTable,tableData:enterCell,tableHeader:enterCell,tableRow:enterRow},exit:{codeText:exitCodeText,table:exitTable,tableData:exit,tableHeader:exit,tableRow:exit}};function enterTable(e){const t=e._align;this.enter({type:"table",align:t.map((e=>e==="none"?null:e)),children:[]},e);this.setData("inTable",true)}function exitTable(e){this.exit(e);this.setData("inTable")}function enterRow(e){this.enter({type:"tableRow",children:[]},e)}function exit(e){this.exit(e)}function enterCell(e){this.enter({type:"tableCell",children:[]},e)}function exitCodeText(e){let t=this.resume();if(this.getData("inTable")){t=t.replace(/\\([\\|])/g,replace)}const n=this.stack[this.stack.length-1];n.value=t;this.exit(e)}function replace(e,t){return t==="|"?t:e}function gfmTableToMarkdown(e){const t=e||{};const n=t.tableCellPadding;const r=t.tablePipeAlign;const i=t.stringLength;const o=n?" ":"|";return{unsafe:[{character:"\r",inConstruct:"tableCell"},{character:"\n",inConstruct:"tableCell"},{atBreak:true,character:"|",after:"[\t :-]"},{character:"|",inConstruct:"tableCell"},{atBreak:true,character:":",after:"-"},{atBreak:true,character:"-",after:"[:|-]"}],handlers:{table:handleTable,tableRow:handleTableRow,tableCell:handleTableCell,inlineCode:inlineCodeWithTable}};function handleTable(e,t,n,r){return serializeData(handleTableAsData(e,n,r),e.align)}function handleTableRow(e,t,n,r){const i=handleTableRowAsData(e,n,r);const o=serializeData([i]);return o.slice(0,o.indexOf("\n"))}function handleTableCell(e,t,n,r){const i=n.enter("tableCell");const a=n.enter("phrasing");const l=containerPhrasing(e,n,{...r,before:o,after:o});a();i();return l}function serializeData(e,t){return markdownTable(e,{align:t,alignDelimiters:r,padding:n,stringLength:i})}function handleTableAsData(e,t,n){const r=e.children;let i=-1;const o=[];const a=t.enter("table");while(++i<r.length){o[i]=handleTableRowAsData(r[i],t,n)}a();return o}function handleTableRowAsData(e,t,n){const r=e.children;let i=-1;const o=[];const a=t.enter("tableRow");while(++i<r.length){o[i]=handleTableCell(r[i],e,t,n)}a();return o}function inlineCodeWithTable(e,t,n){let r=inlineCode(e,t,n);if(n.stack.includes("tableCell")){r=r.replace(/\|/g,"\\$&")}return r}}function checkBullet(e){const t=e.options.bullet||"*";if(t!=="*"&&t!=="+"&&t!=="-"){throw new Error("Cannot serialize items with `"+t+"` for `options.bullet`, expected `*`, `+`, or `-`")}return t}function checkListItemIndent(e){const t=e.options.listItemIndent||"tab";if(t===1||t==="1"){return"one"}if(t!=="tab"&&t!=="one"&&t!=="mixed"){throw new Error("Cannot serialize items with `"+t+"` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`")}return t}function listItem(e,t,n,r){const i=checkListItemIndent(n);let o=n.bulletCurrent||checkBullet(n);if(t&&t.type==="list"&&t.ordered){o=(typeof t.start==="number"&&t.start>-1?t.start:1)+(n.options.incrementListMarker===false?0:t.children.indexOf(e))+o}let a=o.length+1;if(i==="tab"||i==="mixed"&&(t&&t.type==="list"&&t.spread||e.spread)){a=Math.ceil(a/4)*4}const l=n.createTracker(r);l.move(o+" ".repeat(a-o.length));l.shift(a);const c=n.enter("listItem");const u=n.indentLines(n.containerFlow(e,l.current()),map);c();return u;function map(e,t,n){if(t){return(n?"":" ".repeat(a))+e}return(n?o:o+" ".repeat(a-o.length))+e}}const J={exit:{taskListCheckValueChecked:exitCheck,taskListCheckValueUnchecked:exitCheck,paragraph:exitParagraphWithTaskListItem}};const Y={unsafe:[{atBreak:true,character:"-",after:"[:|-]"}],handlers:{listItem:listItemWithTaskListItem}};function exitCheck(e){const t=this.stack[this.stack.length-2];t.checked=e.type==="taskListCheckValueChecked"}function exitParagraphWithTaskListItem(e){const t=this.stack[this.stack.length-2];const n=this.stack[this.stack.length-1];const r=t.children;const i=n.children[0];let o=-1;let a;if(t&&t.type==="listItem"&&typeof t.checked==="boolean"&&i&&i.type==="text"){while(++o<r.length){const e=r[o];if(e.type==="paragraph"){a=e;break}}if(a===n){i.value=i.value.slice(1);if(i.value.length===0){n.children.shift()}else if(n.position&&i.position&&typeof i.position.start.offset==="number"){i.position.start.column++;i.position.start.offset++;n.position.start=Object.assign({},i.position.start)}}}this.exit(e)}function listItemWithTaskListItem(e,t,n,r){const i=e.children[0];const o=typeof e.checked==="boolean"&&i&&i.type==="paragraph";const a="["+(e.checked?"x":" ")+"] ";const l=track(r);if(o){l.move(a)}let c=listItem(e,t,n,{...r,...l.current()});if(o){c=c.replace(/^(?:[*+-]|\d+\.)([\r\n]| {1,3})/,check)}return c;function check(e){return e+a}}function gfmFromMarkdown(){return[H,gfmFootnoteFromMarkdown(),M,Z,J]}function gfmToMarkdown(e){return{extensions:[O,gfmFootnoteToMarkdown(),_,gfmTableToMarkdown(e),Y]}}function remarkGfm(e={}){const t=this.data();add("micromarkExtensions",gfm(e));add("fromMarkdownExtensions",gfmFromMarkdown());add("toMarkdownExtensions",gfmToMarkdown(e));function add(e,n){const r=t[e]?t[e]:t[e]=[];r.push(n)}}module.exports=t})();